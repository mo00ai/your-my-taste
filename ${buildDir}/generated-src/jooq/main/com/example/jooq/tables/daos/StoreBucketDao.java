/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.tables.StoreBucket;
import com.example.jooq.tables.records.StoreBucketRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreBucketDao extends DAOImpl<StoreBucketRecord, com.example.jooq.tables.pojos.StoreBucket, Long> {

    /**
     * Create a new StoreBucketDao without any configuration
     */
    public StoreBucketDao() {
        super(StoreBucket.STORE_BUCKET, com.example.jooq.tables.pojos.StoreBucket.class);
    }

    /**
     * Create a new StoreBucketDao with an attached configuration
     */
    public StoreBucketDao(Configuration configuration) {
        super(StoreBucket.STORE_BUCKET, com.example.jooq.tables.pojos.StoreBucket.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.StoreBucket object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.StoreBucket> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(StoreBucket.STORE_BUCKET.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.StoreBucket> fetchById(Long... values) {
        return fetch(StoreBucket.STORE_BUCKET.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.StoreBucket fetchOneById(Long value) {
        return fetchOne(StoreBucket.STORE_BUCKET.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.StoreBucket> fetchOptionalById(Long value) {
        return fetchOptional(StoreBucket.STORE_BUCKET.ID, value);
    }

    /**
     * Fetch records that have <code>is_opened BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.StoreBucket> fetchRangeOfIsOpened(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(StoreBucket.STORE_BUCKET.IS_OPENED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_opened IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.StoreBucket> fetchByIsOpened(Boolean... values) {
        return fetch(StoreBucket.STORE_BUCKET.IS_OPENED, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.StoreBucket> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(StoreBucket.STORE_BUCKET.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.StoreBucket> fetchByName(String... values) {
        return fetch(StoreBucket.STORE_BUCKET.NAME, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.StoreBucket> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(StoreBucket.STORE_BUCKET.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.StoreBucket> fetchByUserId(Long... values) {
        return fetch(StoreBucket.STORE_BUCKET.USER_ID, values);
    }
}
