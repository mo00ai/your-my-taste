/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.tables.Event;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventRecord extends UpdatableRecordImpl<EventRecord> implements Record7<Long, String, LocalDate, Boolean, String, LocalDate, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taste.event.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taste.event.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taste.event.contents</code>.
     */
    public void setContents(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>taste.event.contents</code>.
     */
    public String getContents() {
        return (String) get(1);
    }

    /**
     * Setter for <code>taste.event.end_date</code>.
     */
    public void setEndDate(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>taste.event.end_date</code>.
     */
    public LocalDate getEndDate() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>taste.event.is_active</code>.
     */
    public void setIsActive(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>taste.event.is_active</code>.
     */
    public Boolean getIsActive() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>taste.event.name</code>.
     */
    public void setName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>taste.event.name</code>.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>taste.event.start_date</code>.
     */
    public void setStartDate(LocalDate value) {
        set(5, value);
    }

    /**
     * Getter for <code>taste.event.start_date</code>.
     */
    public LocalDate getStartDate() {
        return (LocalDate) get(5);
    }

    /**
     * Setter for <code>taste.event.user_id</code>.
     */
    public void setUserId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>taste.event.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, LocalDate, Boolean, String, LocalDate, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, LocalDate, Boolean, String, LocalDate, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Event.EVENT.ID;
    }

    @Override
    public Field<String> field2() {
        return Event.EVENT.CONTENTS;
    }

    @Override
    public Field<LocalDate> field3() {
        return Event.EVENT.END_DATE;
    }

    @Override
    public Field<Boolean> field4() {
        return Event.EVENT.IS_ACTIVE;
    }

    @Override
    public Field<String> field5() {
        return Event.EVENT.NAME;
    }

    @Override
    public Field<LocalDate> field6() {
        return Event.EVENT.START_DATE;
    }

    @Override
    public Field<Long> field7() {
        return Event.EVENT.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getContents();
    }

    @Override
    public LocalDate component3() {
        return getEndDate();
    }

    @Override
    public Boolean component4() {
        return getIsActive();
    }

    @Override
    public String component5() {
        return getName();
    }

    @Override
    public LocalDate component6() {
        return getStartDate();
    }

    @Override
    public Long component7() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getContents();
    }

    @Override
    public LocalDate value3() {
        return getEndDate();
    }

    @Override
    public Boolean value4() {
        return getIsActive();
    }

    @Override
    public String value5() {
        return getName();
    }

    @Override
    public LocalDate value6() {
        return getStartDate();
    }

    @Override
    public Long value7() {
        return getUserId();
    }

    @Override
    public EventRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public EventRecord value2(String value) {
        setContents(value);
        return this;
    }

    @Override
    public EventRecord value3(LocalDate value) {
        setEndDate(value);
        return this;
    }

    @Override
    public EventRecord value4(Boolean value) {
        setIsActive(value);
        return this;
    }

    @Override
    public EventRecord value5(String value) {
        setName(value);
        return this;
    }

    @Override
    public EventRecord value6(LocalDate value) {
        setStartDate(value);
        return this;
    }

    @Override
    public EventRecord value7(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public EventRecord values(Long value1, String value2, LocalDate value3, Boolean value4, String value5, LocalDate value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventRecord
     */
    public EventRecord() {
        super(Event.EVENT);
    }

    /**
     * Create a detached, initialised EventRecord
     */
    public EventRecord(Long id, String contents, LocalDate endDate, Boolean isActive, String name, LocalDate startDate, Long userId) {
        super(Event.EVENT);

        setId(id);
        setContents(contents);
        setEndDate(endDate);
        setIsActive(isActive);
        setName(name);
        setStartDate(startDate);
        setUserId(userId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised EventRecord
     */
    public EventRecord(com.example.jooq.tables.pojos.Event value) {
        super(Event.EVENT);

        if (value != null) {
            setId(value.getId());
            setContents(value.getContents());
            setEndDate(value.getEndDate());
            setIsActive(value.getIsActive());
            setName(value.getName());
            setStartDate(value.getStartDate());
            setUserId(value.getUserId());
            resetChangedOnNotNull();
        }
    }
}
