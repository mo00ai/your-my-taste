/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.tables.Comment;
import com.example.jooq.tables.records.CommentRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentDao extends DAOImpl<CommentRecord, com.example.jooq.tables.pojos.Comment, Long> {

    /**
     * Create a new CommentDao without any configuration
     */
    public CommentDao() {
        super(Comment.COMMENT, com.example.jooq.tables.pojos.Comment.class);
    }

    /**
     * Create a new CommentDao with an attached configuration
     */
    public CommentDao(Configuration configuration) {
        super(Comment.COMMENT, com.example.jooq.tables.pojos.Comment.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.Comment object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Comment.COMMENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchById(Long... values) {
        return fetch(Comment.COMMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.Comment fetchOneById(Long value) {
        return fetchOne(Comment.COMMENT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.Comment> fetchOptionalById(Long value) {
        return fetchOptional(Comment.COMMENT.ID, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Comment.COMMENT.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Comment.COMMENT.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Comment.COMMENT.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Comment.COMMENT.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>contents BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchRangeOfContents(String lowerInclusive, String upperInclusive) {
        return fetchRange(Comment.COMMENT.CONTENTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>contents IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchByContents(String... values) {
        return fetch(Comment.COMMENT.CONTENTS, values);
    }

    /**
     * Fetch records that have <code>deleted_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchRangeOfDeletedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Comment.COMMENT.DELETED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted_at IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchByDeletedAt(LocalDateTime... values) {
        return fetch(Comment.COMMENT.DELETED_AT, values);
    }

    /**
     * Fetch records that have <code>board_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchRangeOfBoardId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Comment.COMMENT.BOARD_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>board_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchByBoardId(Long... values) {
        return fetch(Comment.COMMENT.BOARD_ID, values);
    }

    /**
     * Fetch records that have <code>parent_comment BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchRangeOfParentComment(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Comment.COMMENT.PARENT_COMMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>parent_comment IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchByParentComment(Long... values) {
        return fetch(Comment.COMMENT.PARENT_COMMENT, values);
    }

    /**
     * Fetch records that have <code>root_comment BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchRangeOfRootComment(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Comment.COMMENT.ROOT_COMMENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>root_comment IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchByRootComment(Long... values) {
        return fetch(Comment.COMMENT.ROOT_COMMENT, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Comment.COMMENT.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Comment> fetchByUserId(Long... values) {
        return fetch(Comment.COMMENT.USER_ID, values);
    }
}
