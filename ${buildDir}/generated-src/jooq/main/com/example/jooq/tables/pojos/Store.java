/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Store implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private LocalDateTime createdAt;
    private LocalDateTime deletedAt;
    private LocalDateTime updatedAt;
    private String address;
    private String description;
    private BigDecimal mapx;
    private BigDecimal mapy;
    private String name;
    private String roadAddress;
    private Long categoryId;

    public Store() {}

    public Store(Store value) {
        this.id = value.id;
        this.createdAt = value.createdAt;
        this.deletedAt = value.deletedAt;
        this.updatedAt = value.updatedAt;
        this.address = value.address;
        this.description = value.description;
        this.mapx = value.mapx;
        this.mapy = value.mapy;
        this.name = value.name;
        this.roadAddress = value.roadAddress;
        this.categoryId = value.categoryId;
    }

    public Store(
        Long id,
        LocalDateTime createdAt,
        LocalDateTime deletedAt,
        LocalDateTime updatedAt,
        String address,
        String description,
        BigDecimal mapx,
        BigDecimal mapy,
        String name,
        String roadAddress,
        Long categoryId
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.deletedAt = deletedAt;
        this.updatedAt = updatedAt;
        this.address = address;
        this.description = description;
        this.mapx = mapx;
        this.mapy = mapy;
        this.name = name;
        this.roadAddress = roadAddress;
        this.categoryId = categoryId;
    }

    /**
     * Getter for <code>taste.store.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>taste.store.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>taste.store.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>taste.store.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>taste.store.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return this.deletedAt;
    }

    /**
     * Setter for <code>taste.store.deleted_at</code>.
     */
    public void setDeletedAt(LocalDateTime deletedAt) {
        this.deletedAt = deletedAt;
    }

    /**
     * Getter for <code>taste.store.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>taste.store.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>taste.store.address</code>.
     */
    public String getAddress() {
        return this.address;
    }

    /**
     * Setter for <code>taste.store.address</code>.
     */
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * Getter for <code>taste.store.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>taste.store.description</code>.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for <code>taste.store.mapx</code>.
     */
    public BigDecimal getMapx() {
        return this.mapx;
    }

    /**
     * Setter for <code>taste.store.mapx</code>.
     */
    public void setMapx(BigDecimal mapx) {
        this.mapx = mapx;
    }

    /**
     * Getter for <code>taste.store.mapy</code>.
     */
    public BigDecimal getMapy() {
        return this.mapy;
    }

    /**
     * Setter for <code>taste.store.mapy</code>.
     */
    public void setMapy(BigDecimal mapy) {
        this.mapy = mapy;
    }

    /**
     * Getter for <code>taste.store.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>taste.store.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>taste.store.road_address</code>.
     */
    public String getRoadAddress() {
        return this.roadAddress;
    }

    /**
     * Setter for <code>taste.store.road_address</code>.
     */
    public void setRoadAddress(String roadAddress) {
        this.roadAddress = roadAddress;
    }

    /**
     * Getter for <code>taste.store.category_id</code>.
     */
    public Long getCategoryId() {
        return this.categoryId;
    }

    /**
     * Setter for <code>taste.store.category_id</code>.
     */
    public void setCategoryId(Long categoryId) {
        this.categoryId = categoryId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Store other = (Store) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.deletedAt == null) {
            if (other.deletedAt != null)
                return false;
        }
        else if (!this.deletedAt.equals(other.deletedAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.address == null) {
            if (other.address != null)
                return false;
        }
        else if (!this.address.equals(other.address))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.mapx == null) {
            if (other.mapx != null)
                return false;
        }
        else if (!this.mapx.equals(other.mapx))
            return false;
        if (this.mapy == null) {
            if (other.mapy != null)
                return false;
        }
        else if (!this.mapy.equals(other.mapy))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.roadAddress == null) {
            if (other.roadAddress != null)
                return false;
        }
        else if (!this.roadAddress.equals(other.roadAddress))
            return false;
        if (this.categoryId == null) {
            if (other.categoryId != null)
                return false;
        }
        else if (!this.categoryId.equals(other.categoryId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.deletedAt == null) ? 0 : this.deletedAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.address == null) ? 0 : this.address.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.mapx == null) ? 0 : this.mapx.hashCode());
        result = prime * result + ((this.mapy == null) ? 0 : this.mapy.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.roadAddress == null) ? 0 : this.roadAddress.hashCode());
        result = prime * result + ((this.categoryId == null) ? 0 : this.categoryId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Store (");

        sb.append(id);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(deletedAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(address);
        sb.append(", ").append(description);
        sb.append(", ").append(mapx);
        sb.append(", ").append(mapy);
        sb.append(", ").append(name);
        sb.append(", ").append(roadAddress);
        sb.append(", ").append(categoryId);

        sb.append(")");
        return sb.toString();
    }
}
