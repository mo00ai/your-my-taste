/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.tables.Store;
import com.example.jooq.tables.records.StoreRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreDao extends DAOImpl<StoreRecord, com.example.jooq.tables.pojos.Store, Long> {

    /**
     * Create a new StoreDao without any configuration
     */
    public StoreDao() {
        super(Store.STORE, com.example.jooq.tables.pojos.Store.class);
    }

    /**
     * Create a new StoreDao with an attached configuration
     */
    public StoreDao(Configuration configuration) {
        super(Store.STORE, com.example.jooq.tables.pojos.Store.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.Store object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Store.STORE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchById(Long... values) {
        return fetch(Store.STORE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.Store fetchOneById(Long value) {
        return fetchOne(Store.STORE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.Store> fetchOptionalById(Long value) {
        return fetchOptional(Store.STORE.ID, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Store.STORE.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Store.STORE.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>deleted_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchRangeOfDeletedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Store.STORE.DELETED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>deleted_at IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchByDeletedAt(LocalDateTime... values) {
        return fetch(Store.STORE.DELETED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Store.STORE.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Store.STORE.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchRangeOfAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(Store.STORE.ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>address IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchByAddress(String... values) {
        return fetch(Store.STORE.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Store.STORE.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchByDescription(String... values) {
        return fetch(Store.STORE.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>mapx BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchRangeOfMapx(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Store.STORE.MAPX, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mapx IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchByMapx(BigDecimal... values) {
        return fetch(Store.STORE.MAPX, values);
    }

    /**
     * Fetch records that have <code>mapy BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchRangeOfMapy(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Store.STORE.MAPY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mapy IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchByMapy(BigDecimal... values) {
        return fetch(Store.STORE.MAPY, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Store.STORE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchByName(String... values) {
        return fetch(Store.STORE.NAME, values);
    }

    /**
     * Fetch records that have <code>road_address BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchRangeOfRoadAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(Store.STORE.ROAD_ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>road_address IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchByRoadAddress(String... values) {
        return fetch(Store.STORE.ROAD_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>category_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchRangeOfCategoryId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Store.STORE.CATEGORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Store> fetchByCategoryId(Long... values) {
        return fetch(Store.STORE.CATEGORY_ID, values);
    }
}
