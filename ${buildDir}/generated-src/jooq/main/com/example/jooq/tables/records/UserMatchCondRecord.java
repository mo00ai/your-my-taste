/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.enums.UserMatchCondGender;
import com.example.jooq.enums.UserMatchCondMatchingStatus;
import com.example.jooq.tables.UserMatchCond;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserMatchCondRecord extends UpdatableRecordImpl<UserMatchCondRecord> implements Record8<Long, LocalDateTime, Integer, Integer, UserMatchCondGender, UserMatchCondMatchingStatus, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taste.user_match_cond.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taste.user_match_cond.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taste.user_match_cond.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>taste.user_match_cond.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>taste.user_match_cond.age_max_range</code>.
     */
    public void setAgeMaxRange(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>taste.user_match_cond.age_max_range</code>.
     */
    public Integer getAgeMaxRange() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>taste.user_match_cond.age_min_range</code>.
     */
    public void setAgeMinRange(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>taste.user_match_cond.age_min_range</code>.
     */
    public Integer getAgeMinRange() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>taste.user_match_cond.gender</code>.
     */
    public void setGender(UserMatchCondGender value) {
        set(4, value);
    }

    /**
     * Getter for <code>taste.user_match_cond.gender</code>.
     */
    public UserMatchCondGender getGender() {
        return (UserMatchCondGender) get(4);
    }

    /**
     * Setter for <code>taste.user_match_cond.matching_status</code>.
     */
    public void setMatchingStatus(UserMatchCondMatchingStatus value) {
        set(5, value);
    }

    /**
     * Getter for <code>taste.user_match_cond.matching_status</code>.
     */
    public UserMatchCondMatchingStatus getMatchingStatus() {
        return (UserMatchCondMatchingStatus) get(5);
    }

    /**
     * Setter for <code>taste.user_match_cond.region</code>.
     */
    public void setRegion(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>taste.user_match_cond.region</code>.
     */
    public String getRegion() {
        return (String) get(6);
    }

    /**
     * Setter for <code>taste.user_match_cond.user_id</code>.
     */
    public void setUserId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>taste.user_match_cond.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, LocalDateTime, Integer, Integer, UserMatchCondGender, UserMatchCondMatchingStatus, String, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, LocalDateTime, Integer, Integer, UserMatchCondGender, UserMatchCondMatchingStatus, String, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserMatchCond.USER_MATCH_COND.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return UserMatchCond.USER_MATCH_COND.CREATED_AT;
    }

    @Override
    public Field<Integer> field3() {
        return UserMatchCond.USER_MATCH_COND.AGE_MAX_RANGE;
    }

    @Override
    public Field<Integer> field4() {
        return UserMatchCond.USER_MATCH_COND.AGE_MIN_RANGE;
    }

    @Override
    public Field<UserMatchCondGender> field5() {
        return UserMatchCond.USER_MATCH_COND.GENDER;
    }

    @Override
    public Field<UserMatchCondMatchingStatus> field6() {
        return UserMatchCond.USER_MATCH_COND.MATCHING_STATUS;
    }

    @Override
    public Field<String> field7() {
        return UserMatchCond.USER_MATCH_COND.REGION;
    }

    @Override
    public Field<Long> field8() {
        return UserMatchCond.USER_MATCH_COND.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public Integer component3() {
        return getAgeMaxRange();
    }

    @Override
    public Integer component4() {
        return getAgeMinRange();
    }

    @Override
    public UserMatchCondGender component5() {
        return getGender();
    }

    @Override
    public UserMatchCondMatchingStatus component6() {
        return getMatchingStatus();
    }

    @Override
    public String component7() {
        return getRegion();
    }

    @Override
    public Long component8() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public Integer value3() {
        return getAgeMaxRange();
    }

    @Override
    public Integer value4() {
        return getAgeMinRange();
    }

    @Override
    public UserMatchCondGender value5() {
        return getGender();
    }

    @Override
    public UserMatchCondMatchingStatus value6() {
        return getMatchingStatus();
    }

    @Override
    public String value7() {
        return getRegion();
    }

    @Override
    public Long value8() {
        return getUserId();
    }

    @Override
    public UserMatchCondRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserMatchCondRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UserMatchCondRecord value3(Integer value) {
        setAgeMaxRange(value);
        return this;
    }

    @Override
    public UserMatchCondRecord value4(Integer value) {
        setAgeMinRange(value);
        return this;
    }

    @Override
    public UserMatchCondRecord value5(UserMatchCondGender value) {
        setGender(value);
        return this;
    }

    @Override
    public UserMatchCondRecord value6(UserMatchCondMatchingStatus value) {
        setMatchingStatus(value);
        return this;
    }

    @Override
    public UserMatchCondRecord value7(String value) {
        setRegion(value);
        return this;
    }

    @Override
    public UserMatchCondRecord value8(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserMatchCondRecord values(Long value1, LocalDateTime value2, Integer value3, Integer value4, UserMatchCondGender value5, UserMatchCondMatchingStatus value6, String value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserMatchCondRecord
     */
    public UserMatchCondRecord() {
        super(UserMatchCond.USER_MATCH_COND);
    }

    /**
     * Create a detached, initialised UserMatchCondRecord
     */
    public UserMatchCondRecord(Long id, LocalDateTime createdAt, Integer ageMaxRange, Integer ageMinRange, UserMatchCondGender gender, UserMatchCondMatchingStatus matchingStatus, String region, Long userId) {
        super(UserMatchCond.USER_MATCH_COND);

        setId(id);
        setCreatedAt(createdAt);
        setAgeMaxRange(ageMaxRange);
        setAgeMinRange(ageMinRange);
        setGender(gender);
        setMatchingStatus(matchingStatus);
        setRegion(region);
        setUserId(userId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserMatchCondRecord
     */
    public UserMatchCondRecord(com.example.jooq.tables.pojos.UserMatchCond value) {
        super(UserMatchCond.USER_MATCH_COND);

        if (value != null) {
            setId(value.getId());
            setCreatedAt(value.getCreatedAt());
            setAgeMaxRange(value.getAgeMaxRange());
            setAgeMinRange(value.getAgeMinRange());
            setGender(value.getGender());
            setMatchingStatus(value.getMatchingStatus());
            setRegion(value.getRegion());
            setUserId(value.getUserId());
            resetChangedOnNotNull();
        }
    }
}
