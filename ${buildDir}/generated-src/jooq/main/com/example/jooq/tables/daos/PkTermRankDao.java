/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.tables.PkTermRank;
import com.example.jooq.tables.records.PkTermRankRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PkTermRankDao extends DAOImpl<PkTermRankRecord, com.example.jooq.tables.pojos.PkTermRank, Long> {

    /**
     * Create a new PkTermRankDao without any configuration
     */
    public PkTermRankDao() {
        super(PkTermRank.PK_TERM_RANK, com.example.jooq.tables.pojos.PkTermRank.class);
    }

    /**
     * Create a new PkTermRankDao with an attached configuration
     */
    public PkTermRankDao(Configuration configuration) {
        super(PkTermRank.PK_TERM_RANK, com.example.jooq.tables.pojos.PkTermRank.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.PkTermRank object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PkTermRank> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PkTermRank.PK_TERM_RANK.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PkTermRank> fetchById(Long... values) {
        return fetch(PkTermRank.PK_TERM_RANK.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.PkTermRank fetchOneById(Long value) {
        return fetchOne(PkTermRank.PK_TERM_RANK.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.PkTermRank> fetchOptionalById(Long value) {
        return fetchOptional(PkTermRank.PK_TERM_RANK.ID, value);
    }

    /**
     * Fetch records that have <code>point BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PkTermRank> fetchRangeOfPoint(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PkTermRank.PK_TERM_RANK.POINT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>point IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PkTermRank> fetchByPoint(Integer... values) {
        return fetch(PkTermRank.PK_TERM_RANK.POINT, values);
    }

    /**
     * Fetch records that have <code>ranking BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PkTermRank> fetchRangeOfRanking(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PkTermRank.PK_TERM_RANK.RANKING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ranking IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PkTermRank> fetchByRanking(Integer... values) {
        return fetch(PkTermRank.PK_TERM_RANK.RANKING, values);
    }

    /**
     * Fetch records that have <code>pk_term_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PkTermRank> fetchRangeOfPkTermId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PkTermRank.PK_TERM_RANK.PK_TERM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pk_term_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PkTermRank> fetchByPkTermId(Long... values) {
        return fetch(PkTermRank.PK_TERM_RANK.PK_TERM_ID, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PkTermRank> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PkTermRank.PK_TERM_RANK.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PkTermRank> fetchByUserId(Long... values) {
        return fetch(PkTermRank.PK_TERM_RANK.USER_ID, values);
    }
}
