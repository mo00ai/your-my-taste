/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Review implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private String contents;
    private Boolean isPresented;
    private Boolean isValidated;
    private Byte score;
    private Long imageId;
    private Long storeId;
    private Long userId;

    public Review() {}

    public Review(Review value) {
        this.id = value.id;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.contents = value.contents;
        this.isPresented = value.isPresented;
        this.isValidated = value.isValidated;
        this.score = value.score;
        this.imageId = value.imageId;
        this.storeId = value.storeId;
        this.userId = value.userId;
    }

    public Review(
        Long id,
        LocalDateTime createdAt,
        LocalDateTime updatedAt,
        String contents,
        Boolean isPresented,
        Boolean isValidated,
        Byte score,
        Long imageId,
        Long storeId,
        Long userId
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.contents = contents;
        this.isPresented = isPresented;
        this.isValidated = isValidated;
        this.score = score;
        this.imageId = imageId;
        this.storeId = storeId;
        this.userId = userId;
    }

    /**
     * Getter for <code>taste.review.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>taste.review.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>taste.review.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>taste.review.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>taste.review.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>taste.review.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>taste.review.contents</code>.
     */
    public String getContents() {
        return this.contents;
    }

    /**
     * Setter for <code>taste.review.contents</code>.
     */
    public void setContents(String contents) {
        this.contents = contents;
    }

    /**
     * Getter for <code>taste.review.is_presented</code>.
     */
    public Boolean getIsPresented() {
        return this.isPresented;
    }

    /**
     * Setter for <code>taste.review.is_presented</code>.
     */
    public void setIsPresented(Boolean isPresented) {
        this.isPresented = isPresented;
    }

    /**
     * Getter for <code>taste.review.is_validated</code>.
     */
    public Boolean getIsValidated() {
        return this.isValidated;
    }

    /**
     * Setter for <code>taste.review.is_validated</code>.
     */
    public void setIsValidated(Boolean isValidated) {
        this.isValidated = isValidated;
    }

    /**
     * Getter for <code>taste.review.score</code>.
     */
    public Byte getScore() {
        return this.score;
    }

    /**
     * Setter for <code>taste.review.score</code>.
     */
    public void setScore(Byte score) {
        this.score = score;
    }

    /**
     * Getter for <code>taste.review.image_id</code>.
     */
    public Long getImageId() {
        return this.imageId;
    }

    /**
     * Setter for <code>taste.review.image_id</code>.
     */
    public void setImageId(Long imageId) {
        this.imageId = imageId;
    }

    /**
     * Getter for <code>taste.review.store_id</code>.
     */
    public Long getStoreId() {
        return this.storeId;
    }

    /**
     * Setter for <code>taste.review.store_id</code>.
     */
    public void setStoreId(Long storeId) {
        this.storeId = storeId;
    }

    /**
     * Getter for <code>taste.review.user_id</code>.
     */
    public Long getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>taste.review.user_id</code>.
     */
    public void setUserId(Long userId) {
        this.userId = userId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Review other = (Review) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.contents == null) {
            if (other.contents != null)
                return false;
        }
        else if (!this.contents.equals(other.contents))
            return false;
        if (this.isPresented == null) {
            if (other.isPresented != null)
                return false;
        }
        else if (!this.isPresented.equals(other.isPresented))
            return false;
        if (this.isValidated == null) {
            if (other.isValidated != null)
                return false;
        }
        else if (!this.isValidated.equals(other.isValidated))
            return false;
        if (this.score == null) {
            if (other.score != null)
                return false;
        }
        else if (!this.score.equals(other.score))
            return false;
        if (this.imageId == null) {
            if (other.imageId != null)
                return false;
        }
        else if (!this.imageId.equals(other.imageId))
            return false;
        if (this.storeId == null) {
            if (other.storeId != null)
                return false;
        }
        else if (!this.storeId.equals(other.storeId))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.contents == null) ? 0 : this.contents.hashCode());
        result = prime * result + ((this.isPresented == null) ? 0 : this.isPresented.hashCode());
        result = prime * result + ((this.isValidated == null) ? 0 : this.isValidated.hashCode());
        result = prime * result + ((this.score == null) ? 0 : this.score.hashCode());
        result = prime * result + ((this.imageId == null) ? 0 : this.imageId.hashCode());
        result = prime * result + ((this.storeId == null) ? 0 : this.storeId.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Review (");

        sb.append(id);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(contents);
        sb.append(", ").append(isPresented);
        sb.append(", ").append(isValidated);
        sb.append(", ").append(score);
        sb.append(", ").append(imageId);
        sb.append(", ").append(storeId);
        sb.append(", ").append(userId);

        sb.append(")");
        return sb.toString();
    }
}
