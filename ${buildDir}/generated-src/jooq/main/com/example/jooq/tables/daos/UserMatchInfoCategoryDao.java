/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.tables.UserMatchInfoCategory;
import com.example.jooq.tables.records.UserMatchInfoCategoryRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserMatchInfoCategoryDao extends DAOImpl<UserMatchInfoCategoryRecord, com.example.jooq.tables.pojos.UserMatchInfoCategory, Long> {

    /**
     * Create a new UserMatchInfoCategoryDao without any configuration
     */
    public UserMatchInfoCategoryDao() {
        super(UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY, com.example.jooq.tables.pojos.UserMatchInfoCategory.class);
    }

    /**
     * Create a new UserMatchInfoCategoryDao with an attached configuration
     */
    public UserMatchInfoCategoryDao(Configuration configuration) {
        super(UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY, com.example.jooq.tables.pojos.UserMatchInfoCategory.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.UserMatchInfoCategory object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.UserMatchInfoCategory> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.UserMatchInfoCategory> fetchById(Long... values) {
        return fetch(UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.UserMatchInfoCategory fetchOneById(Long value) {
        return fetchOne(UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.UserMatchInfoCategory> fetchOptionalById(Long value) {
        return fetchOptional(UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY.ID, value);
    }

    /**
     * Fetch records that have <code>category_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.UserMatchInfoCategory> fetchRangeOfCategoryId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY.CATEGORY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.UserMatchInfoCategory> fetchByCategoryId(Long... values) {
        return fetch(UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY.CATEGORY_ID, values);
    }

    /**
     * Fetch records that have <code>user_match_info_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.UserMatchInfoCategory> fetchRangeOfUserMatchInfoId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY.USER_MATCH_INFO_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_match_info_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.UserMatchInfoCategory> fetchByUserMatchInfoId(Long... values) {
        return fetch(UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY.USER_MATCH_INFO_ID, values);
    }
}
