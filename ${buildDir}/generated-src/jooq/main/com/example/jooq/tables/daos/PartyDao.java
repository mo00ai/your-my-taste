/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.enums.PartyPartyStatus;
import com.example.jooq.tables.Party;
import com.example.jooq.tables.records.PartyRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartyDao extends DAOImpl<PartyRecord, com.example.jooq.tables.pojos.Party, Long> {

    /**
     * Create a new PartyDao without any configuration
     */
    public PartyDao() {
        super(Party.PARTY, com.example.jooq.tables.pojos.Party.class);
    }

    /**
     * Create a new PartyDao with an attached configuration
     */
    public PartyDao(Configuration configuration) {
        super(Party.PARTY, com.example.jooq.tables.pojos.Party.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.Party object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Party.PARTY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchById(Long... values) {
        return fetch(Party.PARTY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.Party fetchOneById(Long value) {
        return fetchOne(Party.PARTY.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.Party> fetchOptionalById(Long value) {
        return fetchOptional(Party.PARTY.ID, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Party.PARTY.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Party.PARTY.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Party.PARTY.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchByDescription(String... values) {
        return fetch(Party.PARTY.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>enable_random_matching BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchRangeOfEnableRandomMatching(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Party.PARTY.ENABLE_RANDOM_MATCHING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>enable_random_matching IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchByEnableRandomMatching(Boolean... values) {
        return fetch(Party.PARTY.ENABLE_RANDOM_MATCHING, values);
    }

    /**
     * Fetch records that have <code>max_members BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchRangeOfMaxMembers(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Party.PARTY.MAX_MEMBERS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max_members IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchByMaxMembers(Integer... values) {
        return fetch(Party.PARTY.MAX_MEMBERS, values);
    }

    /**
     * Fetch records that have <code>meeting_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchRangeOfMeetingDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Party.PARTY.MEETING_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>meeting_date IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchByMeetingDate(LocalDate... values) {
        return fetch(Party.PARTY.MEETING_DATE, values);
    }

    /**
     * Fetch records that have <code>now_members BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchRangeOfNowMembers(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Party.PARTY.NOW_MEMBERS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>now_members IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchByNowMembers(Integer... values) {
        return fetch(Party.PARTY.NOW_MEMBERS, values);
    }

    /**
     * Fetch records that have <code>party_status BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchRangeOfPartyStatus(PartyPartyStatus lowerInclusive, PartyPartyStatus upperInclusive) {
        return fetchRange(Party.PARTY.PARTY_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>party_status IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchByPartyStatus(PartyPartyStatus... values) {
        return fetch(Party.PARTY.PARTY_STATUS, values);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(Party.PARTY.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchByTitle(String... values) {
        return fetch(Party.PARTY.TITLE, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Party.PARTY.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchByUserId(Long... values) {
        return fetch(Party.PARTY.USER_ID, values);
    }

    /**
     * Fetch records that have <code>store_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchRangeOfStoreId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Party.PARTY.STORE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>store_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Party> fetchByStoreId(Long... values) {
        return fetch(Party.PARTY.STORE_ID, values);
    }
}
