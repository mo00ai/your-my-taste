/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.tables.NotificationSetting;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationSettingRecord extends UpdatableRecordImpl<NotificationSettingRecord> implements Record3<String, Boolean, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taste.notification_setting.category</code>.
     */
    public void setCategory(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>taste.notification_setting.category</code>.
     */
    public String getCategory() {
        return (String) get(0);
    }

    /**
     * Setter for <code>taste.notification_setting.accepted</code>.
     */
    public void setAccepted(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>taste.notification_setting.accepted</code>.
     */
    public Boolean getAccepted() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>taste.notification_setting.user_id</code>.
     */
    public void setUserId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>taste.notification_setting.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Boolean, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Boolean, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return NotificationSetting.NOTIFICATION_SETTING.CATEGORY;
    }

    @Override
    public Field<Boolean> field2() {
        return NotificationSetting.NOTIFICATION_SETTING.ACCEPTED;
    }

    @Override
    public Field<Long> field3() {
        return NotificationSetting.NOTIFICATION_SETTING.USER_ID;
    }

    @Override
    public String component1() {
        return getCategory();
    }

    @Override
    public Boolean component2() {
        return getAccepted();
    }

    @Override
    public Long component3() {
        return getUserId();
    }

    @Override
    public String value1() {
        return getCategory();
    }

    @Override
    public Boolean value2() {
        return getAccepted();
    }

    @Override
    public Long value3() {
        return getUserId();
    }

    @Override
    public NotificationSettingRecord value1(String value) {
        setCategory(value);
        return this;
    }

    @Override
    public NotificationSettingRecord value2(Boolean value) {
        setAccepted(value);
        return this;
    }

    @Override
    public NotificationSettingRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public NotificationSettingRecord values(String value1, Boolean value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationSettingRecord
     */
    public NotificationSettingRecord() {
        super(NotificationSetting.NOTIFICATION_SETTING);
    }

    /**
     * Create a detached, initialised NotificationSettingRecord
     */
    public NotificationSettingRecord(String category, Boolean accepted, Long userId) {
        super(NotificationSetting.NOTIFICATION_SETTING);

        setCategory(category);
        setAccepted(accepted);
        setUserId(userId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised NotificationSettingRecord
     */
    public NotificationSettingRecord(com.example.jooq.tables.pojos.NotificationSetting value) {
        super(NotificationSetting.NOTIFICATION_SETTING);

        if (value != null) {
            setCategory(value.getCategory());
            setAccepted(value.getAccepted());
            setUserId(value.getUserId());
            resetChangedOnNotNull();
        }
    }
}
