/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.tables.Event;
import com.example.jooq.tables.records.EventRecord;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventDao extends DAOImpl<EventRecord, com.example.jooq.tables.pojos.Event, Long> {

    /**
     * Create a new EventDao without any configuration
     */
    public EventDao() {
        super(Event.EVENT, com.example.jooq.tables.pojos.Event.class);
    }

    /**
     * Create a new EventDao with an attached configuration
     */
    public EventDao(Configuration configuration) {
        super(Event.EVENT, com.example.jooq.tables.pojos.Event.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.Event object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Event> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Event.EVENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Event> fetchById(Long... values) {
        return fetch(Event.EVENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.Event fetchOneById(Long value) {
        return fetchOne(Event.EVENT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.Event> fetchOptionalById(Long value) {
        return fetchOptional(Event.EVENT.ID, value);
    }

    /**
     * Fetch records that have <code>contents BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Event> fetchRangeOfContents(String lowerInclusive, String upperInclusive) {
        return fetchRange(Event.EVENT.CONTENTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>contents IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Event> fetchByContents(String... values) {
        return fetch(Event.EVENT.CONTENTS, values);
    }

    /**
     * Fetch records that have <code>end_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Event> fetchRangeOfEndDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Event.EVENT.END_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>end_date IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Event> fetchByEndDate(LocalDate... values) {
        return fetch(Event.EVENT.END_DATE, values);
    }

    /**
     * Fetch records that have <code>is_active BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Event> fetchRangeOfIsActive(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(Event.EVENT.IS_ACTIVE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_active IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Event> fetchByIsActive(Boolean... values) {
        return fetch(Event.EVENT.IS_ACTIVE, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Event> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Event.EVENT.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Event> fetchByName(String... values) {
        return fetch(Event.EVENT.NAME, values);
    }

    /**
     * Fetch records that have <code>start_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Event> fetchRangeOfStartDate(LocalDate lowerInclusive, LocalDate upperInclusive) {
        return fetchRange(Event.EVENT.START_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>start_date IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Event> fetchByStartDate(LocalDate... values) {
        return fetch(Event.EVENT.START_DATE, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Event> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Event.EVENT.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Event> fetchByUserId(Long... values) {
        return fetch(Event.EVENT.USER_ID, values);
    }
}
