/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.tables.PartyMatchInfoFavor;
import com.example.jooq.tables.records.PartyMatchInfoFavorRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartyMatchInfoFavorDao extends DAOImpl<PartyMatchInfoFavorRecord, com.example.jooq.tables.pojos.PartyMatchInfoFavor, Long> {

    /**
     * Create a new PartyMatchInfoFavorDao without any configuration
     */
    public PartyMatchInfoFavorDao() {
        super(PartyMatchInfoFavor.PARTY_MATCH_INFO_FAVOR, com.example.jooq.tables.pojos.PartyMatchInfoFavor.class);
    }

    /**
     * Create a new PartyMatchInfoFavorDao with an attached configuration
     */
    public PartyMatchInfoFavorDao(Configuration configuration) {
        super(PartyMatchInfoFavor.PARTY_MATCH_INFO_FAVOR, com.example.jooq.tables.pojos.PartyMatchInfoFavor.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.PartyMatchInfoFavor object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PartyMatchInfoFavor> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PartyMatchInfoFavor.PARTY_MATCH_INFO_FAVOR.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PartyMatchInfoFavor> fetchById(Long... values) {
        return fetch(PartyMatchInfoFavor.PARTY_MATCH_INFO_FAVOR.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.PartyMatchInfoFavor fetchOneById(Long value) {
        return fetchOne(PartyMatchInfoFavor.PARTY_MATCH_INFO_FAVOR.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.PartyMatchInfoFavor> fetchOptionalById(Long value) {
        return fetchOptional(PartyMatchInfoFavor.PARTY_MATCH_INFO_FAVOR.ID, value);
    }

    /**
     * Fetch records that have <code>favor_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PartyMatchInfoFavor> fetchRangeOfFavorId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PartyMatchInfoFavor.PARTY_MATCH_INFO_FAVOR.FAVOR_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>favor_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PartyMatchInfoFavor> fetchByFavorId(Long... values) {
        return fetch(PartyMatchInfoFavor.PARTY_MATCH_INFO_FAVOR.FAVOR_ID, values);
    }

    /**
     * Fetch records that have <code>party_match_info_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PartyMatchInfoFavor> fetchRangeOfPartyMatchInfoId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PartyMatchInfoFavor.PARTY_MATCH_INFO_FAVOR.PARTY_MATCH_INFO_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>party_match_info_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PartyMatchInfoFavor> fetchByPartyMatchInfoId(Long... values) {
        return fetch(PartyMatchInfoFavor.PARTY_MATCH_INFO_FAVOR.PARTY_MATCH_INFO_ID, values);
    }
}
