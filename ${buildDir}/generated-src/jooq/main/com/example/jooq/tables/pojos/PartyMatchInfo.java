/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.pojos;


import com.example.jooq.enums.PartyMatchInfoGender;
import com.example.jooq.enums.PartyMatchInfoMatchStatus;

import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartyMatchInfo implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private LocalDateTime createdAt;
    private Integer maxAge;
    private Integer minAge;
    private PartyMatchInfoGender gender;
    private PartyMatchInfoMatchStatus matchStatus;
    private LocalDate meetingDate;
    private String region;
    private Long partyId;
    private Long storeId;

    public PartyMatchInfo() {}

    public PartyMatchInfo(PartyMatchInfo value) {
        this.id = value.id;
        this.createdAt = value.createdAt;
        this.maxAge = value.maxAge;
        this.minAge = value.minAge;
        this.gender = value.gender;
        this.matchStatus = value.matchStatus;
        this.meetingDate = value.meetingDate;
        this.region = value.region;
        this.partyId = value.partyId;
        this.storeId = value.storeId;
    }

    public PartyMatchInfo(
        Long id,
        LocalDateTime createdAt,
        Integer maxAge,
        Integer minAge,
        PartyMatchInfoGender gender,
        PartyMatchInfoMatchStatus matchStatus,
        LocalDate meetingDate,
        String region,
        Long partyId,
        Long storeId
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.maxAge = maxAge;
        this.minAge = minAge;
        this.gender = gender;
        this.matchStatus = matchStatus;
        this.meetingDate = meetingDate;
        this.region = region;
        this.partyId = partyId;
        this.storeId = storeId;
    }

    /**
     * Getter for <code>taste.party_match_info.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>taste.party_match_info.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>taste.party_match_info.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>taste.party_match_info.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>taste.party_match_info.max_age</code>.
     */
    public Integer getMaxAge() {
        return this.maxAge;
    }

    /**
     * Setter for <code>taste.party_match_info.max_age</code>.
     */
    public void setMaxAge(Integer maxAge) {
        this.maxAge = maxAge;
    }

    /**
     * Getter for <code>taste.party_match_info.min_age</code>.
     */
    public Integer getMinAge() {
        return this.minAge;
    }

    /**
     * Setter for <code>taste.party_match_info.min_age</code>.
     */
    public void setMinAge(Integer minAge) {
        this.minAge = minAge;
    }

    /**
     * Getter for <code>taste.party_match_info.gender</code>.
     */
    public PartyMatchInfoGender getGender() {
        return this.gender;
    }

    /**
     * Setter for <code>taste.party_match_info.gender</code>.
     */
    public void setGender(PartyMatchInfoGender gender) {
        this.gender = gender;
    }

    /**
     * Getter for <code>taste.party_match_info.match_status</code>.
     */
    public PartyMatchInfoMatchStatus getMatchStatus() {
        return this.matchStatus;
    }

    /**
     * Setter for <code>taste.party_match_info.match_status</code>.
     */
    public void setMatchStatus(PartyMatchInfoMatchStatus matchStatus) {
        this.matchStatus = matchStatus;
    }

    /**
     * Getter for <code>taste.party_match_info.meeting_date</code>.
     */
    public LocalDate getMeetingDate() {
        return this.meetingDate;
    }

    /**
     * Setter for <code>taste.party_match_info.meeting_date</code>.
     */
    public void setMeetingDate(LocalDate meetingDate) {
        this.meetingDate = meetingDate;
    }

    /**
     * Getter for <code>taste.party_match_info.region</code>.
     */
    public String getRegion() {
        return this.region;
    }

    /**
     * Setter for <code>taste.party_match_info.region</code>.
     */
    public void setRegion(String region) {
        this.region = region;
    }

    /**
     * Getter for <code>taste.party_match_info.party_id</code>.
     */
    public Long getPartyId() {
        return this.partyId;
    }

    /**
     * Setter for <code>taste.party_match_info.party_id</code>.
     */
    public void setPartyId(Long partyId) {
        this.partyId = partyId;
    }

    /**
     * Getter for <code>taste.party_match_info.store_id</code>.
     */
    public Long getStoreId() {
        return this.storeId;
    }

    /**
     * Setter for <code>taste.party_match_info.store_id</code>.
     */
    public void setStoreId(Long storeId) {
        this.storeId = storeId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PartyMatchInfo other = (PartyMatchInfo) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.maxAge == null) {
            if (other.maxAge != null)
                return false;
        }
        else if (!this.maxAge.equals(other.maxAge))
            return false;
        if (this.minAge == null) {
            if (other.minAge != null)
                return false;
        }
        else if (!this.minAge.equals(other.minAge))
            return false;
        if (this.gender == null) {
            if (other.gender != null)
                return false;
        }
        else if (!this.gender.equals(other.gender))
            return false;
        if (this.matchStatus == null) {
            if (other.matchStatus != null)
                return false;
        }
        else if (!this.matchStatus.equals(other.matchStatus))
            return false;
        if (this.meetingDate == null) {
            if (other.meetingDate != null)
                return false;
        }
        else if (!this.meetingDate.equals(other.meetingDate))
            return false;
        if (this.region == null) {
            if (other.region != null)
                return false;
        }
        else if (!this.region.equals(other.region))
            return false;
        if (this.partyId == null) {
            if (other.partyId != null)
                return false;
        }
        else if (!this.partyId.equals(other.partyId))
            return false;
        if (this.storeId == null) {
            if (other.storeId != null)
                return false;
        }
        else if (!this.storeId.equals(other.storeId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.maxAge == null) ? 0 : this.maxAge.hashCode());
        result = prime * result + ((this.minAge == null) ? 0 : this.minAge.hashCode());
        result = prime * result + ((this.gender == null) ? 0 : this.gender.hashCode());
        result = prime * result + ((this.matchStatus == null) ? 0 : this.matchStatus.hashCode());
        result = prime * result + ((this.meetingDate == null) ? 0 : this.meetingDate.hashCode());
        result = prime * result + ((this.region == null) ? 0 : this.region.hashCode());
        result = prime * result + ((this.partyId == null) ? 0 : this.partyId.hashCode());
        result = prime * result + ((this.storeId == null) ? 0 : this.storeId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PartyMatchInfo (");

        sb.append(id);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(maxAge);
        sb.append(", ").append(minAge);
        sb.append(", ").append(gender);
        sb.append(", ").append(matchStatus);
        sb.append(", ").append(meetingDate);
        sb.append(", ").append(region);
        sb.append(", ").append(partyId);
        sb.append(", ").append(storeId);

        sb.append(")");
        return sb.toString();
    }
}
