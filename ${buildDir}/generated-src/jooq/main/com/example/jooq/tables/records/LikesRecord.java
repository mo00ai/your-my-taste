/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.tables.Likes;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LikesRecord extends UpdatableRecordImpl<LikesRecord> implements Record4<Long, LocalDateTime, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taste.likes.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taste.likes.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taste.likes.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>taste.likes.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>taste.likes.board_id</code>.
     */
    public void setBoardId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>taste.likes.board_id</code>.
     */
    public Long getBoardId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>taste.likes.user_id</code>.
     */
    public void setUserId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>taste.likes.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, LocalDateTime, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, LocalDateTime, Long, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Likes.LIKES.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Likes.LIKES.CREATED_AT;
    }

    @Override
    public Field<Long> field3() {
        return Likes.LIKES.BOARD_ID;
    }

    @Override
    public Field<Long> field4() {
        return Likes.LIKES.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public Long component3() {
        return getBoardId();
    }

    @Override
    public Long component4() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public Long value3() {
        return getBoardId();
    }

    @Override
    public Long value4() {
        return getUserId();
    }

    @Override
    public LikesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public LikesRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public LikesRecord value3(Long value) {
        setBoardId(value);
        return this;
    }

    @Override
    public LikesRecord value4(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public LikesRecord values(Long value1, LocalDateTime value2, Long value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LikesRecord
     */
    public LikesRecord() {
        super(Likes.LIKES);
    }

    /**
     * Create a detached, initialised LikesRecord
     */
    public LikesRecord(Long id, LocalDateTime createdAt, Long boardId, Long userId) {
        super(Likes.LIKES);

        setId(id);
        setCreatedAt(createdAt);
        setBoardId(boardId);
        setUserId(userId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised LikesRecord
     */
    public LikesRecord(com.example.jooq.tables.pojos.Likes value) {
        super(Likes.LIKES);

        if (value != null) {
            setId(value.getId());
            setCreatedAt(value.getCreatedAt());
            setBoardId(value.getBoardId());
            setUserId(value.getUserId());
            resetChangedOnNotNull();
        }
    }
}
