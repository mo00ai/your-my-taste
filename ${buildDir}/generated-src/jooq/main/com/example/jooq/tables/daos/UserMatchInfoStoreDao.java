/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.tables.UserMatchInfoStore;
import com.example.jooq.tables.records.UserMatchInfoStoreRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserMatchInfoStoreDao extends DAOImpl<UserMatchInfoStoreRecord, com.example.jooq.tables.pojos.UserMatchInfoStore, Long> {

    /**
     * Create a new UserMatchInfoStoreDao without any configuration
     */
    public UserMatchInfoStoreDao() {
        super(UserMatchInfoStore.USER_MATCH_INFO_STORE, com.example.jooq.tables.pojos.UserMatchInfoStore.class);
    }

    /**
     * Create a new UserMatchInfoStoreDao with an attached configuration
     */
    public UserMatchInfoStoreDao(Configuration configuration) {
        super(UserMatchInfoStore.USER_MATCH_INFO_STORE, com.example.jooq.tables.pojos.UserMatchInfoStore.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.UserMatchInfoStore object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.UserMatchInfoStore> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UserMatchInfoStore.USER_MATCH_INFO_STORE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.UserMatchInfoStore> fetchById(Long... values) {
        return fetch(UserMatchInfoStore.USER_MATCH_INFO_STORE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.UserMatchInfoStore fetchOneById(Long value) {
        return fetchOne(UserMatchInfoStore.USER_MATCH_INFO_STORE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.UserMatchInfoStore> fetchOptionalById(Long value) {
        return fetchOptional(UserMatchInfoStore.USER_MATCH_INFO_STORE.ID, value);
    }

    /**
     * Fetch records that have <code>store_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.UserMatchInfoStore> fetchRangeOfStoreId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UserMatchInfoStore.USER_MATCH_INFO_STORE.STORE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>store_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.UserMatchInfoStore> fetchByStoreId(Long... values) {
        return fetch(UserMatchInfoStore.USER_MATCH_INFO_STORE.STORE_ID, values);
    }

    /**
     * Fetch records that have <code>user_match_info_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.UserMatchInfoStore> fetchRangeOfUserMatchInfoId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(UserMatchInfoStore.USER_MATCH_INFO_STORE.USER_MATCH_INFO_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_match_info_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.UserMatchInfoStore> fetchByUserMatchInfoId(Long... values) {
        return fetch(UserMatchInfoStore.USER_MATCH_INFO_STORE.USER_MATCH_INFO_ID, values);
    }
}
