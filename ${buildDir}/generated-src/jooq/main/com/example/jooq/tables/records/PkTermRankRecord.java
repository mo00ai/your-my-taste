/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.tables.PkTermRank;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PkTermRankRecord extends UpdatableRecordImpl<PkTermRankRecord> implements Record5<Long, Integer, Integer, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taste.pk_term_rank.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taste.pk_term_rank.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taste.pk_term_rank.point</code>.
     */
    public void setPoint(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>taste.pk_term_rank.point</code>.
     */
    public Integer getPoint() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>taste.pk_term_rank.ranking</code>.
     */
    public void setRanking(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>taste.pk_term_rank.ranking</code>.
     */
    public Integer getRanking() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>taste.pk_term_rank.pk_term_id</code>.
     */
    public void setPkTermId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>taste.pk_term_rank.pk_term_id</code>.
     */
    public Long getPkTermId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>taste.pk_term_rank.user_id</code>.
     */
    public void setUserId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>taste.pk_term_rank.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Integer, Integer, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Integer, Integer, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PkTermRank.PK_TERM_RANK.ID;
    }

    @Override
    public Field<Integer> field2() {
        return PkTermRank.PK_TERM_RANK.POINT;
    }

    @Override
    public Field<Integer> field3() {
        return PkTermRank.PK_TERM_RANK.RANKING;
    }

    @Override
    public Field<Long> field4() {
        return PkTermRank.PK_TERM_RANK.PK_TERM_ID;
    }

    @Override
    public Field<Long> field5() {
        return PkTermRank.PK_TERM_RANK.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getPoint();
    }

    @Override
    public Integer component3() {
        return getRanking();
    }

    @Override
    public Long component4() {
        return getPkTermId();
    }

    @Override
    public Long component5() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getPoint();
    }

    @Override
    public Integer value3() {
        return getRanking();
    }

    @Override
    public Long value4() {
        return getPkTermId();
    }

    @Override
    public Long value5() {
        return getUserId();
    }

    @Override
    public PkTermRankRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PkTermRankRecord value2(Integer value) {
        setPoint(value);
        return this;
    }

    @Override
    public PkTermRankRecord value3(Integer value) {
        setRanking(value);
        return this;
    }

    @Override
    public PkTermRankRecord value4(Long value) {
        setPkTermId(value);
        return this;
    }

    @Override
    public PkTermRankRecord value5(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public PkTermRankRecord values(Long value1, Integer value2, Integer value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PkTermRankRecord
     */
    public PkTermRankRecord() {
        super(PkTermRank.PK_TERM_RANK);
    }

    /**
     * Create a detached, initialised PkTermRankRecord
     */
    public PkTermRankRecord(Long id, Integer point, Integer ranking, Long pkTermId, Long userId) {
        super(PkTermRank.PK_TERM_RANK);

        setId(id);
        setPoint(point);
        setRanking(ranking);
        setPkTermId(pkTermId);
        setUserId(userId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PkTermRankRecord
     */
    public PkTermRankRecord(com.example.jooq.tables.pojos.PkTermRank value) {
        super(PkTermRank.PK_TERM_RANK);

        if (value != null) {
            setId(value.getId());
            setPoint(value.getPoint());
            setRanking(value.getRanking());
            setPkTermId(value.getPkTermId());
            setUserId(value.getUserId());
            resetChangedOnNotNull();
        }
    }
}
