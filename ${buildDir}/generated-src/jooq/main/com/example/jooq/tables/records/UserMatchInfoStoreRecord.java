/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.tables.UserMatchInfoStore;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserMatchInfoStoreRecord extends UpdatableRecordImpl<UserMatchInfoStoreRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taste.user_match_info_store.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taste.user_match_info_store.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taste.user_match_info_store.store_id</code>.
     */
    public void setStoreId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>taste.user_match_info_store.store_id</code>.
     */
    public Long getStoreId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>taste.user_match_info_store.user_match_info_id</code>.
     */
    public void setUserMatchInfoId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>taste.user_match_info_store.user_match_info_id</code>.
     */
    public Long getUserMatchInfoId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserMatchInfoStore.USER_MATCH_INFO_STORE.ID;
    }

    @Override
    public Field<Long> field2() {
        return UserMatchInfoStore.USER_MATCH_INFO_STORE.STORE_ID;
    }

    @Override
    public Field<Long> field3() {
        return UserMatchInfoStore.USER_MATCH_INFO_STORE.USER_MATCH_INFO_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getStoreId();
    }

    @Override
    public Long component3() {
        return getUserMatchInfoId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getStoreId();
    }

    @Override
    public Long value3() {
        return getUserMatchInfoId();
    }

    @Override
    public UserMatchInfoStoreRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserMatchInfoStoreRecord value2(Long value) {
        setStoreId(value);
        return this;
    }

    @Override
    public UserMatchInfoStoreRecord value3(Long value) {
        setUserMatchInfoId(value);
        return this;
    }

    @Override
    public UserMatchInfoStoreRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserMatchInfoStoreRecord
     */
    public UserMatchInfoStoreRecord() {
        super(UserMatchInfoStore.USER_MATCH_INFO_STORE);
    }

    /**
     * Create a detached, initialised UserMatchInfoStoreRecord
     */
    public UserMatchInfoStoreRecord(Long id, Long storeId, Long userMatchInfoId) {
        super(UserMatchInfoStore.USER_MATCH_INFO_STORE);

        setId(id);
        setStoreId(storeId);
        setUserMatchInfoId(userMatchInfoId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserMatchInfoStoreRecord
     */
    public UserMatchInfoStoreRecord(com.example.jooq.tables.pojos.UserMatchInfoStore value) {
        super(UserMatchInfoStore.USER_MATCH_INFO_STORE);

        if (value != null) {
            setId(value.getId());
            setStoreId(value.getStoreId());
            setUserMatchInfoId(value.getUserMatchInfoId());
            resetChangedOnNotNull();
        }
    }
}
