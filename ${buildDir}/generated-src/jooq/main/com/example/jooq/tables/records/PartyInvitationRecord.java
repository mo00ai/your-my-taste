/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.enums.PartyInvitationInvitationStatus;
import com.example.jooq.enums.PartyInvitationInvitationType;
import com.example.jooq.tables.PartyInvitation;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartyInvitationRecord extends UpdatableRecordImpl<PartyInvitationRecord> implements Record7<Long, LocalDateTime, PartyInvitationInvitationStatus, PartyInvitationInvitationType, Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taste.party_invitation.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taste.party_invitation.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taste.party_invitation.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>taste.party_invitation.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>taste.party_invitation.invitation_status</code>.
     */
    public void setInvitationStatus(PartyInvitationInvitationStatus value) {
        set(2, value);
    }

    /**
     * Getter for <code>taste.party_invitation.invitation_status</code>.
     */
    public PartyInvitationInvitationStatus getInvitationStatus() {
        return (PartyInvitationInvitationStatus) get(2);
    }

    /**
     * Setter for <code>taste.party_invitation.invitation_type</code>.
     */
    public void setInvitationType(PartyInvitationInvitationType value) {
        set(3, value);
    }

    /**
     * Getter for <code>taste.party_invitation.invitation_type</code>.
     */
    public PartyInvitationInvitationType getInvitationType() {
        return (PartyInvitationInvitationType) get(3);
    }

    /**
     * Setter for <code>taste.party_invitation.party_id</code>.
     */
    public void setPartyId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>taste.party_invitation.party_id</code>.
     */
    public Long getPartyId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>taste.party_invitation.user_id</code>.
     */
    public void setUserId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>taste.party_invitation.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>taste.party_invitation.user_match_info_id</code>.
     */
    public void setUserMatchInfoId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>taste.party_invitation.user_match_info_id</code>.
     */
    public Long getUserMatchInfoId() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, LocalDateTime, PartyInvitationInvitationStatus, PartyInvitationInvitationType, Long, Long, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, LocalDateTime, PartyInvitationInvitationStatus, PartyInvitationInvitationType, Long, Long, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PartyInvitation.PARTY_INVITATION.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return PartyInvitation.PARTY_INVITATION.CREATED_AT;
    }

    @Override
    public Field<PartyInvitationInvitationStatus> field3() {
        return PartyInvitation.PARTY_INVITATION.INVITATION_STATUS;
    }

    @Override
    public Field<PartyInvitationInvitationType> field4() {
        return PartyInvitation.PARTY_INVITATION.INVITATION_TYPE;
    }

    @Override
    public Field<Long> field5() {
        return PartyInvitation.PARTY_INVITATION.PARTY_ID;
    }

    @Override
    public Field<Long> field6() {
        return PartyInvitation.PARTY_INVITATION.USER_ID;
    }

    @Override
    public Field<Long> field7() {
        return PartyInvitation.PARTY_INVITATION.USER_MATCH_INFO_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public PartyInvitationInvitationStatus component3() {
        return getInvitationStatus();
    }

    @Override
    public PartyInvitationInvitationType component4() {
        return getInvitationType();
    }

    @Override
    public Long component5() {
        return getPartyId();
    }

    @Override
    public Long component6() {
        return getUserId();
    }

    @Override
    public Long component7() {
        return getUserMatchInfoId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public PartyInvitationInvitationStatus value3() {
        return getInvitationStatus();
    }

    @Override
    public PartyInvitationInvitationType value4() {
        return getInvitationType();
    }

    @Override
    public Long value5() {
        return getPartyId();
    }

    @Override
    public Long value6() {
        return getUserId();
    }

    @Override
    public Long value7() {
        return getUserMatchInfoId();
    }

    @Override
    public PartyInvitationRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PartyInvitationRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public PartyInvitationRecord value3(PartyInvitationInvitationStatus value) {
        setInvitationStatus(value);
        return this;
    }

    @Override
    public PartyInvitationRecord value4(PartyInvitationInvitationType value) {
        setInvitationType(value);
        return this;
    }

    @Override
    public PartyInvitationRecord value5(Long value) {
        setPartyId(value);
        return this;
    }

    @Override
    public PartyInvitationRecord value6(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public PartyInvitationRecord value7(Long value) {
        setUserMatchInfoId(value);
        return this;
    }

    @Override
    public PartyInvitationRecord values(Long value1, LocalDateTime value2, PartyInvitationInvitationStatus value3, PartyInvitationInvitationType value4, Long value5, Long value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PartyInvitationRecord
     */
    public PartyInvitationRecord() {
        super(PartyInvitation.PARTY_INVITATION);
    }

    /**
     * Create a detached, initialised PartyInvitationRecord
     */
    public PartyInvitationRecord(Long id, LocalDateTime createdAt, PartyInvitationInvitationStatus invitationStatus, PartyInvitationInvitationType invitationType, Long partyId, Long userId, Long userMatchInfoId) {
        super(PartyInvitation.PARTY_INVITATION);

        setId(id);
        setCreatedAt(createdAt);
        setInvitationStatus(invitationStatus);
        setInvitationType(invitationType);
        setPartyId(partyId);
        setUserId(userId);
        setUserMatchInfoId(userMatchInfoId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PartyInvitationRecord
     */
    public PartyInvitationRecord(com.example.jooq.tables.pojos.PartyInvitation value) {
        super(PartyInvitation.PARTY_INVITATION);

        if (value != null) {
            setId(value.getId());
            setCreatedAt(value.getCreatedAt());
            setInvitationStatus(value.getInvitationStatus());
            setInvitationType(value.getInvitationType());
            setPartyId(value.getPartyId());
            setUserId(value.getUserId());
            setUserMatchInfoId(value.getUserMatchInfoId());
            resetChangedOnNotNull();
        }
    }
}
