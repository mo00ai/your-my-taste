/*
 * This file is generated by jOOQ.
 */
package com.example.jooq;


import com.example.jooq.tables.Board;
import com.example.jooq.tables.BoardEvent;
import com.example.jooq.tables.BoardHashtag;
import com.example.jooq.tables.BoardImage;
import com.example.jooq.tables.BucketItem;
import com.example.jooq.tables.Category;
import com.example.jooq.tables.Chat;
import com.example.jooq.tables.Comment;
import com.example.jooq.tables.Event;
import com.example.jooq.tables.Favor;
import com.example.jooq.tables.Follow;
import com.example.jooq.tables.Hashtag;
import com.example.jooq.tables.Image;
import com.example.jooq.tables.Likes;
import com.example.jooq.tables.NotiSeq;
import com.example.jooq.tables.NotificationContent;
import com.example.jooq.tables.NotificationInfo;
import com.example.jooq.tables.NotificationSetting;
import com.example.jooq.tables.Party;
import com.example.jooq.tables.PartyInvitation;
import com.example.jooq.tables.PartyMatchCond;
import com.example.jooq.tables.PartyMatchInfo;
import com.example.jooq.tables.PkCriteria;
import com.example.jooq.tables.PkLog;
import com.example.jooq.tables.PkTerm;
import com.example.jooq.tables.PkTermRank;
import com.example.jooq.tables.Review;
import com.example.jooq.tables.Store;
import com.example.jooq.tables.StoreBucket;
import com.example.jooq.tables.UserFavor;
import com.example.jooq.tables.UserMatchCond;
import com.example.jooq.tables.UserMatchCondCategory;
import com.example.jooq.tables.UserMatchCondCategorySeq;
import com.example.jooq.tables.UserMatchCondStore;
import com.example.jooq.tables.UserMatchCondStoreSeq;
import com.example.jooq.tables.UserMatchInfo;
import com.example.jooq.tables.UserMatchInfoCategory;
import com.example.jooq.tables.UserMatchInfoCategorySeq;
import com.example.jooq.tables.UserMatchInfoStore;
import com.example.jooq.tables.UserMatchInfoStoreSeq;
import com.example.jooq.tables.Users;


/**
 * Convenience access to all tables in taste.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * The table <code>taste.board</code>.
     */
    public static final Board BOARD = Board.BOARD;

    /**
     * The table <code>taste.board_event</code>.
     */
    public static final BoardEvent BOARD_EVENT = BoardEvent.BOARD_EVENT;

    /**
     * The table <code>taste.board_hashtag</code>.
     */
    public static final BoardHashtag BOARD_HASHTAG = BoardHashtag.BOARD_HASHTAG;

    /**
     * The table <code>taste.board_image</code>.
     */
    public static final BoardImage BOARD_IMAGE = BoardImage.BOARD_IMAGE;

    /**
     * The table <code>taste.bucket_item</code>.
     */
    public static final BucketItem BUCKET_ITEM = BucketItem.BUCKET_ITEM;

    /**
     * The table <code>taste.category</code>.
     */
    public static final Category CATEGORY = Category.CATEGORY;

    /**
     * The table <code>taste.chat</code>.
     */
    public static final Chat CHAT = Chat.CHAT;

    /**
     * The table <code>taste.comment</code>.
     */
    public static final Comment COMMENT = Comment.COMMENT;

    /**
     * The table <code>taste.event</code>.
     */
    public static final Event EVENT = Event.EVENT;

    /**
     * The table <code>taste.favor</code>.
     */
    public static final Favor FAVOR = Favor.FAVOR;

    /**
     * The table <code>taste.follow</code>.
     */
    public static final Follow FOLLOW = Follow.FOLLOW;

    /**
     * The table <code>taste.hashtag</code>.
     */
    public static final Hashtag HASHTAG = Hashtag.HASHTAG;

    /**
     * The table <code>taste.image</code>.
     */
    public static final Image IMAGE = Image.IMAGE;

    /**
     * The table <code>taste.likes</code>.
     */
    public static final Likes LIKES = Likes.LIKES;

    /**
     * The table <code>taste.noti_seq</code>.
     */
    public static final NotiSeq NOTI_SEQ = NotiSeq.NOTI_SEQ;

    /**
     * The table <code>taste.notification_content</code>.
     */
    public static final NotificationContent NOTIFICATION_CONTENT = NotificationContent.NOTIFICATION_CONTENT;

    /**
     * The table <code>taste.notification_info</code>.
     */
    public static final NotificationInfo NOTIFICATION_INFO = NotificationInfo.NOTIFICATION_INFO;

    /**
     * The table <code>taste.notification_setting</code>.
     */
    public static final NotificationSetting NOTIFICATION_SETTING = NotificationSetting.NOTIFICATION_SETTING;

    /**
     * The table <code>taste.party</code>.
     */
    public static final Party PARTY = Party.PARTY;

    /**
     * The table <code>taste.party_invitation</code>.
     */
    public static final PartyInvitation PARTY_INVITATION = PartyInvitation.PARTY_INVITATION;

    /**
     * The table <code>taste.party_match_cond</code>.
     */
    public static final PartyMatchCond PARTY_MATCH_COND = PartyMatchCond.PARTY_MATCH_COND;

    /**
     * The table <code>taste.party_match_info</code>.
     */
    public static final PartyMatchInfo PARTY_MATCH_INFO = PartyMatchInfo.PARTY_MATCH_INFO;

    /**
     * The table <code>taste.pk_criteria</code>.
     */
    public static final PkCriteria PK_CRITERIA = PkCriteria.PK_CRITERIA;

    /**
     * The table <code>taste.pk_log</code>.
     */
    public static final PkLog PK_LOG = PkLog.PK_LOG;

    /**
     * The table <code>taste.pk_term</code>.
     */
    public static final PkTerm PK_TERM = PkTerm.PK_TERM;

    /**
     * The table <code>taste.pk_term_rank</code>.
     */
    public static final PkTermRank PK_TERM_RANK = PkTermRank.PK_TERM_RANK;

    /**
     * The table <code>taste.review</code>.
     */
    public static final Review REVIEW = Review.REVIEW;

    /**
     * The table <code>taste.store</code>.
     */
    public static final Store STORE = Store.STORE;

    /**
     * The table <code>taste.store_bucket</code>.
     */
    public static final StoreBucket STORE_BUCKET = StoreBucket.STORE_BUCKET;

    /**
     * The table <code>taste.user_favor</code>.
     */
    public static final UserFavor USER_FAVOR = UserFavor.USER_FAVOR;

    /**
     * The table <code>taste.user_match_cond</code>.
     */
    public static final UserMatchCond USER_MATCH_COND = UserMatchCond.USER_MATCH_COND;

    /**
     * The table <code>taste.user_match_cond_category</code>.
     */
    public static final UserMatchCondCategory USER_MATCH_COND_CATEGORY = UserMatchCondCategory.USER_MATCH_COND_CATEGORY;

    /**
     * The table <code>taste.user_match_cond_category_seq</code>.
     */
    public static final UserMatchCondCategorySeq USER_MATCH_COND_CATEGORY_SEQ = UserMatchCondCategorySeq.USER_MATCH_COND_CATEGORY_SEQ;

    /**
     * The table <code>taste.user_match_cond_store</code>.
     */
    public static final UserMatchCondStore USER_MATCH_COND_STORE = UserMatchCondStore.USER_MATCH_COND_STORE;

    /**
     * The table <code>taste.user_match_cond_store_seq</code>.
     */
    public static final UserMatchCondStoreSeq USER_MATCH_COND_STORE_SEQ = UserMatchCondStoreSeq.USER_MATCH_COND_STORE_SEQ;

    /**
     * The table <code>taste.user_match_info</code>.
     */
    public static final UserMatchInfo USER_MATCH_INFO = UserMatchInfo.USER_MATCH_INFO;

    /**
     * The table <code>taste.user_match_info_category</code>.
     */
    public static final UserMatchInfoCategory USER_MATCH_INFO_CATEGORY = UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY;

    /**
     * The table <code>taste.user_match_info_category_seq</code>.
     */
    public static final UserMatchInfoCategorySeq USER_MATCH_INFO_CATEGORY_SEQ = UserMatchInfoCategorySeq.USER_MATCH_INFO_CATEGORY_SEQ;

    /**
     * The table <code>taste.user_match_info_store</code>.
     */
    public static final UserMatchInfoStore USER_MATCH_INFO_STORE = UserMatchInfoStore.USER_MATCH_INFO_STORE;

    /**
     * The table <code>taste.user_match_info_store_seq</code>.
     */
    public static final UserMatchInfoStoreSeq USER_MATCH_INFO_STORE_SEQ = UserMatchInfoStoreSeq.USER_MATCH_INFO_STORE_SEQ;

    /**
     * The table <code>taste.users</code>.
     */
    public static final Users USERS = Users.USERS;
}
