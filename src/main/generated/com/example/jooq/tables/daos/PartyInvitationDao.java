/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.enums.PartyInvitationInvitationStatus;
import com.example.jooq.enums.PartyInvitationInvitationType;
import com.example.jooq.tables.PartyInvitation;
import com.example.jooq.tables.records.PartyInvitationRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartyInvitationDao extends DAOImpl<PartyInvitationRecord, com.example.jooq.tables.pojos.PartyInvitation, Long> {

    /**
     * Create a new PartyInvitationDao without any configuration
     */
    public PartyInvitationDao() {
        super(PartyInvitation.PARTY_INVITATION, com.example.jooq.tables.pojos.PartyInvitation.class);
    }

    /**
     * Create a new PartyInvitationDao with an attached configuration
     */
    public PartyInvitationDao(Configuration configuration) {
        super(PartyInvitation.PARTY_INVITATION, com.example.jooq.tables.pojos.PartyInvitation.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.PartyInvitation object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PartyInvitation> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PartyInvitation.PARTY_INVITATION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PartyInvitation> fetchById(Long... values) {
        return fetch(PartyInvitation.PARTY_INVITATION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.PartyInvitation fetchOneById(Long value) {
        return fetchOne(PartyInvitation.PARTY_INVITATION.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.PartyInvitation> fetchOptionalById(Long value) {
        return fetchOptional(PartyInvitation.PARTY_INVITATION.ID, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PartyInvitation> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(PartyInvitation.PARTY_INVITATION.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PartyInvitation> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(PartyInvitation.PARTY_INVITATION.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>invitation_status BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PartyInvitation> fetchRangeOfInvitationStatus(PartyInvitationInvitationStatus lowerInclusive, PartyInvitationInvitationStatus upperInclusive) {
        return fetchRange(PartyInvitation.PARTY_INVITATION.INVITATION_STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>invitation_status IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PartyInvitation> fetchByInvitationStatus(PartyInvitationInvitationStatus... values) {
        return fetch(PartyInvitation.PARTY_INVITATION.INVITATION_STATUS, values);
    }

    /**
     * Fetch records that have <code>invitation_type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PartyInvitation> fetchRangeOfInvitationType(PartyInvitationInvitationType lowerInclusive, PartyInvitationInvitationType upperInclusive) {
        return fetchRange(PartyInvitation.PARTY_INVITATION.INVITATION_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>invitation_type IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PartyInvitation> fetchByInvitationType(PartyInvitationInvitationType... values) {
        return fetch(PartyInvitation.PARTY_INVITATION.INVITATION_TYPE, values);
    }

    /**
     * Fetch records that have <code>party_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PartyInvitation> fetchRangeOfPartyId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PartyInvitation.PARTY_INVITATION.PARTY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>party_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PartyInvitation> fetchByPartyId(Long... values) {
        return fetch(PartyInvitation.PARTY_INVITATION.PARTY_ID, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PartyInvitation> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PartyInvitation.PARTY_INVITATION.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PartyInvitation> fetchByUserId(Long... values) {
        return fetch(PartyInvitation.PARTY_INVITATION.USER_ID, values);
    }

    /**
     * Fetch records that have <code>user_match_info_id BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PartyInvitation> fetchRangeOfUserMatchInfoId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PartyInvitation.PARTY_INVITATION.USER_MATCH_INFO_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_match_info_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PartyInvitation> fetchByUserMatchInfoId(Long... values) {
        return fetch(PartyInvitation.PARTY_INVITATION.USER_MATCH_INFO_ID, values);
    }
}
