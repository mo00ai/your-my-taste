/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.tables.BoardEvent;
import com.example.jooq.tables.records.BoardEventRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BoardEventDao extends DAOImpl<BoardEventRecord, com.example.jooq.tables.pojos.BoardEvent, Long> {

    /**
     * Create a new BoardEventDao without any configuration
     */
    public BoardEventDao() {
        super(BoardEvent.BOARD_EVENT, com.example.jooq.tables.pojos.BoardEvent.class);
    }

    /**
     * Create a new BoardEventDao with an attached configuration
     */
    public BoardEventDao(Configuration configuration) {
        super(BoardEvent.BOARD_EVENT, com.example.jooq.tables.pojos.BoardEvent.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.BoardEvent object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.BoardEvent> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BoardEvent.BOARD_EVENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.BoardEvent> fetchById(Long... values) {
        return fetch(BoardEvent.BOARD_EVENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.BoardEvent fetchOneById(Long value) {
        return fetchOne(BoardEvent.BOARD_EVENT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.BoardEvent> fetchOptionalById(Long value) {
        return fetchOptional(BoardEvent.BOARD_EVENT.ID, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.BoardEvent> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(BoardEvent.BOARD_EVENT.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.BoardEvent> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(BoardEvent.BOARD_EVENT.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.BoardEvent> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(BoardEvent.BOARD_EVENT.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.BoardEvent> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(BoardEvent.BOARD_EVENT.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>board_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.BoardEvent> fetchRangeOfBoardId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BoardEvent.BOARD_EVENT.BOARD_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>board_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.BoardEvent> fetchByBoardId(Long... values) {
        return fetch(BoardEvent.BOARD_EVENT.BOARD_ID, values);
    }

    /**
     * Fetch records that have <code>event_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.BoardEvent> fetchRangeOfEventId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BoardEvent.BOARD_EVENT.EVENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>event_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.BoardEvent> fetchByEventId(Long... values) {
        return fetch(BoardEvent.BOARD_EVENT.EVENT_ID, values);
    }
}
