/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.enums.NotificationInfoCategory;
import com.example.jooq.tables.NotificationInfo;
import com.example.jooq.tables.records.NotificationInfoRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationInfoDao extends DAOImpl<NotificationInfoRecord, com.example.jooq.tables.pojos.NotificationInfo, Long> {

    /**
     * Create a new NotificationInfoDao without any configuration
     */
    public NotificationInfoDao() {
        super(NotificationInfo.NOTIFICATION_INFO, com.example.jooq.tables.pojos.NotificationInfo.class);
    }

    /**
     * Create a new NotificationInfoDao with an attached configuration
     */
    public NotificationInfoDao(Configuration configuration) {
        super(NotificationInfo.NOTIFICATION_INFO, com.example.jooq.tables.pojos.NotificationInfo.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.NotificationInfo object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.NotificationInfo> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(NotificationInfo.NOTIFICATION_INFO.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.NotificationInfo> fetchById(Long... values) {
        return fetch(NotificationInfo.NOTIFICATION_INFO.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.NotificationInfo fetchOneById(Long value) {
        return fetchOne(NotificationInfo.NOTIFICATION_INFO.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.NotificationInfo> fetchOptionalById(Long value) {
        return fetchOptional(NotificationInfo.NOTIFICATION_INFO.ID, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.NotificationInfo> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(NotificationInfo.NOTIFICATION_INFO.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.NotificationInfo> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(NotificationInfo.NOTIFICATION_INFO.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.NotificationInfo> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(NotificationInfo.NOTIFICATION_INFO.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.NotificationInfo> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(NotificationInfo.NOTIFICATION_INFO.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>category BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.NotificationInfo> fetchRangeOfCategory(NotificationInfoCategory lowerInclusive, NotificationInfoCategory upperInclusive) {
        return fetchRange(NotificationInfo.NOTIFICATION_INFO.CATEGORY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>category IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.NotificationInfo> fetchByCategory(NotificationInfoCategory... values) {
        return fetch(NotificationInfo.NOTIFICATION_INFO.CATEGORY, values);
    }

    /**
     * Fetch records that have <code>is_read BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.NotificationInfo> fetchRangeOfIsRead(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(NotificationInfo.NOTIFICATION_INFO.IS_READ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_read IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.NotificationInfo> fetchByIsRead(Boolean... values) {
        return fetch(NotificationInfo.NOTIFICATION_INFO.IS_READ, values);
    }

    /**
     * Fetch records that have <code>notification_content_id BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.NotificationInfo> fetchRangeOfNotificationContentId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(NotificationInfo.NOTIFICATION_INFO.NOTIFICATION_CONTENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>notification_content_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.NotificationInfo> fetchByNotificationContentId(Long... values) {
        return fetch(NotificationInfo.NOTIFICATION_INFO.NOTIFICATION_CONTENT_ID, values);
    }

    /**
     * Fetch records that have <code>notification_target BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.NotificationInfo> fetchRangeOfNotificationTarget(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(NotificationInfo.NOTIFICATION_INFO.NOTIFICATION_TARGET, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>notification_target IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.NotificationInfo> fetchByNotificationTarget(Long... values) {
        return fetch(NotificationInfo.NOTIFICATION_INFO.NOTIFICATION_TARGET, values);
    }
}
