/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.tables.BoardHashtag;
import com.example.jooq.tables.records.BoardHashtagRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BoardHashtagDao extends DAOImpl<BoardHashtagRecord, com.example.jooq.tables.pojos.BoardHashtag, Long> {

    /**
     * Create a new BoardHashtagDao without any configuration
     */
    public BoardHashtagDao() {
        super(BoardHashtag.BOARD_HASHTAG, com.example.jooq.tables.pojos.BoardHashtag.class);
    }

    /**
     * Create a new BoardHashtagDao with an attached configuration
     */
    public BoardHashtagDao(Configuration configuration) {
        super(BoardHashtag.BOARD_HASHTAG, com.example.jooq.tables.pojos.BoardHashtag.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.BoardHashtag object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.BoardHashtag> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BoardHashtag.BOARD_HASHTAG.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.BoardHashtag> fetchById(Long... values) {
        return fetch(BoardHashtag.BOARD_HASHTAG.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.BoardHashtag fetchOneById(Long value) {
        return fetchOne(BoardHashtag.BOARD_HASHTAG.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.BoardHashtag> fetchOptionalById(Long value) {
        return fetchOptional(BoardHashtag.BOARD_HASHTAG.ID, value);
    }

    /**
     * Fetch records that have <code>board_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.BoardHashtag> fetchRangeOfBoardId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BoardHashtag.BOARD_HASHTAG.BOARD_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>board_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.BoardHashtag> fetchByBoardId(Long... values) {
        return fetch(BoardHashtag.BOARD_HASHTAG.BOARD_ID, values);
    }

    /**
     * Fetch records that have <code>hashtag_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.BoardHashtag> fetchRangeOfHashtagId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(BoardHashtag.BOARD_HASHTAG.HASHTAG_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hashtag_id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.BoardHashtag> fetchByHashtagId(Long... values) {
        return fetch(BoardHashtag.BOARD_HASHTAG.HASHTAG_ID, values);
    }
}
