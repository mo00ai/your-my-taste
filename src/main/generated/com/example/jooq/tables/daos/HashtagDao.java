/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.tables.Hashtag;
import com.example.jooq.tables.records.HashtagRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HashtagDao extends DAOImpl<HashtagRecord, com.example.jooq.tables.pojos.Hashtag, Long> {

    /**
     * Create a new HashtagDao without any configuration
     */
    public HashtagDao() {
        super(Hashtag.HASHTAG, com.example.jooq.tables.pojos.Hashtag.class);
    }

    /**
     * Create a new HashtagDao with an attached configuration
     */
    public HashtagDao(Configuration configuration) {
        super(Hashtag.HASHTAG, com.example.jooq.tables.pojos.Hashtag.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.Hashtag object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Hashtag> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Hashtag.HASHTAG.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Hashtag> fetchById(Long... values) {
        return fetch(Hashtag.HASHTAG.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.Hashtag fetchOneById(Long value) {
        return fetchOne(Hashtag.HASHTAG.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.Hashtag> fetchOptionalById(Long value) {
        return fetchOptional(Hashtag.HASHTAG.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Hashtag> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Hashtag.HASHTAG.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Hashtag> fetchByName(String... values) {
        return fetch(Hashtag.HASHTAG.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public com.example.jooq.tables.pojos.Hashtag fetchOneByName(String value) {
        return fetchOne(Hashtag.HASHTAG.NAME, value);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.Hashtag> fetchOptionalByName(String value) {
        return fetchOptional(Hashtag.HASHTAG.NAME, value);
    }
}
