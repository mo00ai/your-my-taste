/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.enums.ImageType;
import com.example.jooq.tables.Image;
import com.example.jooq.tables.records.ImageRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ImageDao extends DAOImpl<ImageRecord, com.example.jooq.tables.pojos.Image, Long> {

    /**
     * Create a new ImageDao without any configuration
     */
    public ImageDao() {
        super(Image.IMAGE, com.example.jooq.tables.pojos.Image.class);
    }

    /**
     * Create a new ImageDao with an attached configuration
     */
    public ImageDao(Configuration configuration) {
        super(Image.IMAGE, com.example.jooq.tables.pojos.Image.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.Image object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Image.IMAGE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchById(Long... values) {
        return fetch(Image.IMAGE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.Image fetchOneById(Long value) {
        return fetchOne(Image.IMAGE.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.Image> fetchOptionalById(Long value) {
        return fetchOptional(Image.IMAGE.ID, value);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Image.IMAGE.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Image.IMAGE.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Image.IMAGE.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Image.IMAGE.UPDATED_AT, values);
    }

    /**
     * Fetch records that have <code>file_extension BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchRangeOfFileExtension(String lowerInclusive, String upperInclusive) {
        return fetchRange(Image.IMAGE.FILE_EXTENSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>file_extension IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchByFileExtension(String... values) {
        return fetch(Image.IMAGE.FILE_EXTENSION, values);
    }

    /**
     * Fetch records that have <code>file_size BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchRangeOfFileSize(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Image.IMAGE.FILE_SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>file_size IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchByFileSize(Long... values) {
        return fetch(Image.IMAGE.FILE_SIZE, values);
    }

    /**
     * Fetch records that have <code>origin_file_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchRangeOfOriginFileName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Image.IMAGE.ORIGIN_FILE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>origin_file_name IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchByOriginFileName(String... values) {
        return fetch(Image.IMAGE.ORIGIN_FILE_NAME, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchRangeOfType(ImageType lowerInclusive, ImageType upperInclusive) {
        return fetchRange(Image.IMAGE.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchByType(ImageType... values) {
        return fetch(Image.IMAGE.TYPE, values);
    }

    /**
     * Fetch records that have <code>upload_file_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchRangeOfUploadFileName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Image.IMAGE.UPLOAD_FILE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>upload_file_name IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchByUploadFileName(String... values) {
        return fetch(Image.IMAGE.UPLOAD_FILE_NAME, values);
    }

    /**
     * Fetch records that have <code>url BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchRangeOfUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(Image.IMAGE.URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Image> fetchByUrl(String... values) {
        return fetch(Image.IMAGE.URL, values);
    }
}
