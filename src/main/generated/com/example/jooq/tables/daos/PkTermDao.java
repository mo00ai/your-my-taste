/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.tables.PkTerm;
import com.example.jooq.tables.records.PkTermRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PkTermDao extends DAOImpl<PkTermRecord, com.example.jooq.tables.pojos.PkTerm, Long> {

    /**
     * Create a new PkTermDao without any configuration
     */
    public PkTermDao() {
        super(PkTerm.PK_TERM, com.example.jooq.tables.pojos.PkTerm.class);
    }

    /**
     * Create a new PkTermDao with an attached configuration
     */
    public PkTermDao(Configuration configuration) {
        super(PkTerm.PK_TERM, com.example.jooq.tables.pojos.PkTerm.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.PkTerm object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PkTerm> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(PkTerm.PK_TERM.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PkTerm> fetchById(Long... values) {
        return fetch(PkTerm.PK_TERM.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.PkTerm fetchOneById(Long value) {
        return fetchOne(PkTerm.PK_TERM.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.PkTerm> fetchOptionalById(Long value) {
        return fetchOptional(PkTerm.PK_TERM.ID, value);
    }

    /**
     * Fetch records that have <code>end_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PkTerm> fetchRangeOfEndDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(PkTerm.PK_TERM.END_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>end_date IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PkTerm> fetchByEndDate(LocalDateTime... values) {
        return fetch(PkTerm.PK_TERM.END_DATE, values);
    }

    /**
     * Fetch records that have <code>start_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PkTerm> fetchRangeOfStartDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(PkTerm.PK_TERM.START_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>start_date IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PkTerm> fetchByStartDate(LocalDateTime... values) {
        return fetch(PkTerm.PK_TERM.START_DATE, values);
    }

    /**
     * Fetch records that have <code>term BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.PkTerm> fetchRangeOfTerm(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(PkTerm.PK_TERM.TERM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>term IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.PkTerm> fetchByTerm(Integer... values) {
        return fetch(PkTerm.PK_TERM.TERM, values);
    }
}
