/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.daos;


import com.example.jooq.tables.Favor;
import com.example.jooq.tables.records.FavorRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FavorDao extends DAOImpl<FavorRecord, com.example.jooq.tables.pojos.Favor, Long> {

    /**
     * Create a new FavorDao without any configuration
     */
    public FavorDao() {
        super(Favor.FAVOR, com.example.jooq.tables.pojos.Favor.class);
    }

    /**
     * Create a new FavorDao with an attached configuration
     */
    public FavorDao(Configuration configuration) {
        super(Favor.FAVOR, com.example.jooq.tables.pojos.Favor.class, configuration);
    }

    @Override
    public Long getId(com.example.jooq.tables.pojos.Favor object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Favor> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Favor.FAVOR.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Favor> fetchById(Long... values) {
        return fetch(Favor.FAVOR.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.jooq.tables.pojos.Favor fetchOneById(Long value) {
        return fetchOne(Favor.FAVOR.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.Favor> fetchOptionalById(Long value) {
        return fetchOptional(Favor.FAVOR.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.jooq.tables.pojos.Favor> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Favor.FAVOR.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.example.jooq.tables.pojos.Favor> fetchByName(String... values) {
        return fetch(Favor.FAVOR.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public com.example.jooq.tables.pojos.Favor fetchOneByName(String value) {
        return fetchOne(Favor.FAVOR.NAME, value);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public Optional<com.example.jooq.tables.pojos.Favor> fetchOptionalByName(String value) {
        return fetchOptional(Favor.FAVOR.NAME, value);
    }
}
