/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.tables.Chat;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChatRecord extends UpdatableRecordImpl<ChatRecord> implements Record5<Long, LocalDateTime, String, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taste.chat.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taste.chat.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taste.chat.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>taste.chat.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>taste.chat.message</code>.
     */
    public void setMessage(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>taste.chat.message</code>.
     */
    public String getMessage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>taste.chat.party_id</code>.
     */
    public void setPartyId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>taste.chat.party_id</code>.
     */
    public Long getPartyId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>taste.chat.user_id</code>.
     */
    public void setUserId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>taste.chat.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, LocalDateTime, String, Long, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, LocalDateTime, String, Long, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Chat.CHAT.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Chat.CHAT.CREATED_AT;
    }

    @Override
    public Field<String> field3() {
        return Chat.CHAT.MESSAGE;
    }

    @Override
    public Field<Long> field4() {
        return Chat.CHAT.PARTY_ID;
    }

    @Override
    public Field<Long> field5() {
        return Chat.CHAT.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public String component3() {
        return getMessage();
    }

    @Override
    public Long component4() {
        return getPartyId();
    }

    @Override
    public Long component5() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public String value3() {
        return getMessage();
    }

    @Override
    public Long value4() {
        return getPartyId();
    }

    @Override
    public Long value5() {
        return getUserId();
    }

    @Override
    public ChatRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ChatRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ChatRecord value3(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public ChatRecord value4(Long value) {
        setPartyId(value);
        return this;
    }

    @Override
    public ChatRecord value5(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public ChatRecord values(Long value1, LocalDateTime value2, String value3, Long value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChatRecord
     */
    public ChatRecord() {
        super(Chat.CHAT);
    }

    /**
     * Create a detached, initialised ChatRecord
     */
    public ChatRecord(Long id, LocalDateTime createdAt, String message, Long partyId, Long userId) {
        super(Chat.CHAT);

        setId(id);
        setCreatedAt(createdAt);
        setMessage(message);
        setPartyId(partyId);
        setUserId(userId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ChatRecord
     */
    public ChatRecord(com.example.jooq.tables.pojos.Chat value) {
        super(Chat.CHAT);

        if (value != null) {
            setId(value.getId());
            setCreatedAt(value.getCreatedAt());
            setMessage(value.getMessage());
            setPartyId(value.getPartyId());
            setUserId(value.getUserId());
            resetChangedOnNotNull();
        }
    }
}
