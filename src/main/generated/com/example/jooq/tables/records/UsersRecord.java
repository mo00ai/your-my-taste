/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.enums.UsersGender;
import com.example.jooq.enums.UsersLevel;
import com.example.jooq.enums.UsersRole;
import com.example.jooq.tables.Users;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> implements Record17<Long, LocalDateTime, LocalDateTime, LocalDateTime, String, Integer, String, Integer, Integer, UsersGender, UsersLevel, String, String, Integer, Integer, UsersRole, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taste.users.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taste.users.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taste.users.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>taste.users.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>taste.users.deleted_at</code>.
     */
    public void setDeletedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>taste.users.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>taste.users.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>taste.users.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>taste.users.address</code>.
     */
    public void setAddress(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>taste.users.address</code>.
     */
    public String getAddress() {
        return (String) get(4);
    }

    /**
     * Setter for <code>taste.users.age</code>.
     */
    public void setAge(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>taste.users.age</code>.
     */
    public Integer getAge() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>taste.users.email</code>.
     */
    public void setEmail(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>taste.users.email</code>.
     */
    public String getEmail() {
        return (String) get(6);
    }

    /**
     * Setter for <code>taste.users.follower</code>.
     */
    public void setFollower(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>taste.users.follower</code>.
     */
    public Integer getFollower() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>taste.users.following</code>.
     */
    public void setFollowing(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>taste.users.following</code>.
     */
    public Integer getFollowing() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>taste.users.gender</code>.
     */
    public void setGender(UsersGender value) {
        set(9, value);
    }

    /**
     * Getter for <code>taste.users.gender</code>.
     */
    public UsersGender getGender() {
        return (UsersGender) get(9);
    }

    /**
     * Setter for <code>taste.users.level</code>.
     */
    public void setLevel(UsersLevel value) {
        set(10, value);
    }

    /**
     * Getter for <code>taste.users.level</code>.
     */
    public UsersLevel getLevel() {
        return (UsersLevel) get(10);
    }

    /**
     * Setter for <code>taste.users.nickname</code>.
     */
    public void setNickname(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>taste.users.nickname</code>.
     */
    public String getNickname() {
        return (String) get(11);
    }

    /**
     * Setter for <code>taste.users.password</code>.
     */
    public void setPassword(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>taste.users.password</code>.
     */
    public String getPassword() {
        return (String) get(12);
    }

    /**
     * Setter for <code>taste.users.point</code>.
     */
    public void setPoint(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>taste.users.point</code>.
     */
    public Integer getPoint() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>taste.users.posting_count</code>.
     */
    public void setPostingCount(Integer value) {
        set(14, value);
    }

    /**
     * Getter for <code>taste.users.posting_count</code>.
     */
    public Integer getPostingCount() {
        return (Integer) get(14);
    }

    /**
     * Setter for <code>taste.users.role</code>.
     */
    public void setRole(UsersRole value) {
        set(15, value);
    }

    /**
     * Getter for <code>taste.users.role</code>.
     */
    public UsersRole getRole() {
        return (UsersRole) get(15);
    }

    /**
     * Setter for <code>taste.users.image_id</code>.
     */
    public void setImageId(Long value) {
        set(16, value);
    }

    /**
     * Getter for <code>taste.users.image_id</code>.
     */
    public Long getImageId() {
        return (Long) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<Long, LocalDateTime, LocalDateTime, LocalDateTime, String, Integer, String, Integer, Integer, UsersGender, UsersLevel, String, String, Integer, Integer, UsersRole, Long> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<Long, LocalDateTime, LocalDateTime, LocalDateTime, String, Integer, String, Integer, Integer, UsersGender, UsersLevel, String, String, Integer, Integer, UsersRole, Long> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Users.USERS.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Users.USERS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Users.USERS.DELETED_AT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return Users.USERS.UPDATED_AT;
    }

    @Override
    public Field<String> field5() {
        return Users.USERS.ADDRESS;
    }

    @Override
    public Field<Integer> field6() {
        return Users.USERS.AGE;
    }

    @Override
    public Field<String> field7() {
        return Users.USERS.EMAIL;
    }

    @Override
    public Field<Integer> field8() {
        return Users.USERS.FOLLOWER;
    }

    @Override
    public Field<Integer> field9() {
        return Users.USERS.FOLLOWING;
    }

    @Override
    public Field<UsersGender> field10() {
        return Users.USERS.GENDER;
    }

    @Override
    public Field<UsersLevel> field11() {
        return Users.USERS.LEVEL;
    }

    @Override
    public Field<String> field12() {
        return Users.USERS.NICKNAME;
    }

    @Override
    public Field<String> field13() {
        return Users.USERS.PASSWORD;
    }

    @Override
    public Field<Integer> field14() {
        return Users.USERS.POINT;
    }

    @Override
    public Field<Integer> field15() {
        return Users.USERS.POSTING_COUNT;
    }

    @Override
    public Field<UsersRole> field16() {
        return Users.USERS.ROLE;
    }

    @Override
    public Field<Long> field17() {
        return Users.USERS.IMAGE_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component3() {
        return getDeletedAt();
    }

    @Override
    public LocalDateTime component4() {
        return getUpdatedAt();
    }

    @Override
    public String component5() {
        return getAddress();
    }

    @Override
    public Integer component6() {
        return getAge();
    }

    @Override
    public String component7() {
        return getEmail();
    }

    @Override
    public Integer component8() {
        return getFollower();
    }

    @Override
    public Integer component9() {
        return getFollowing();
    }

    @Override
    public UsersGender component10() {
        return getGender();
    }

    @Override
    public UsersLevel component11() {
        return getLevel();
    }

    @Override
    public String component12() {
        return getNickname();
    }

    @Override
    public String component13() {
        return getPassword();
    }

    @Override
    public Integer component14() {
        return getPoint();
    }

    @Override
    public Integer component15() {
        return getPostingCount();
    }

    @Override
    public UsersRole component16() {
        return getRole();
    }

    @Override
    public Long component17() {
        return getImageId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value3() {
        return getDeletedAt();
    }

    @Override
    public LocalDateTime value4() {
        return getUpdatedAt();
    }

    @Override
    public String value5() {
        return getAddress();
    }

    @Override
    public Integer value6() {
        return getAge();
    }

    @Override
    public String value7() {
        return getEmail();
    }

    @Override
    public Integer value8() {
        return getFollower();
    }

    @Override
    public Integer value9() {
        return getFollowing();
    }

    @Override
    public UsersGender value10() {
        return getGender();
    }

    @Override
    public UsersLevel value11() {
        return getLevel();
    }

    @Override
    public String value12() {
        return getNickname();
    }

    @Override
    public String value13() {
        return getPassword();
    }

    @Override
    public Integer value14() {
        return getPoint();
    }

    @Override
    public Integer value15() {
        return getPostingCount();
    }

    @Override
    public UsersRole value16() {
        return getRole();
    }

    @Override
    public Long value17() {
        return getImageId();
    }

    @Override
    public UsersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UsersRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UsersRecord value3(LocalDateTime value) {
        setDeletedAt(value);
        return this;
    }

    @Override
    public UsersRecord value4(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public UsersRecord value5(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public UsersRecord value6(Integer value) {
        setAge(value);
        return this;
    }

    @Override
    public UsersRecord value7(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersRecord value8(Integer value) {
        setFollower(value);
        return this;
    }

    @Override
    public UsersRecord value9(Integer value) {
        setFollowing(value);
        return this;
    }

    @Override
    public UsersRecord value10(UsersGender value) {
        setGender(value);
        return this;
    }

    @Override
    public UsersRecord value11(UsersLevel value) {
        setLevel(value);
        return this;
    }

    @Override
    public UsersRecord value12(String value) {
        setNickname(value);
        return this;
    }

    @Override
    public UsersRecord value13(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UsersRecord value14(Integer value) {
        setPoint(value);
        return this;
    }

    @Override
    public UsersRecord value15(Integer value) {
        setPostingCount(value);
        return this;
    }

    @Override
    public UsersRecord value16(UsersRole value) {
        setRole(value);
        return this;
    }

    @Override
    public UsersRecord value17(Long value) {
        setImageId(value);
        return this;
    }

    @Override
    public UsersRecord values(Long value1, LocalDateTime value2, LocalDateTime value3, LocalDateTime value4, String value5, Integer value6, String value7, Integer value8, Integer value9, UsersGender value10, UsersLevel value11, String value12, String value13, Integer value14, Integer value15, UsersRole value16, Long value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Long id, LocalDateTime createdAt, LocalDateTime deletedAt, LocalDateTime updatedAt, String address, Integer age, String email, Integer follower, Integer following, UsersGender gender, UsersLevel level, String nickname, String password, Integer point, Integer postingCount, UsersRole role, Long imageId) {
        super(Users.USERS);

        setId(id);
        setCreatedAt(createdAt);
        setDeletedAt(deletedAt);
        setUpdatedAt(updatedAt);
        setAddress(address);
        setAge(age);
        setEmail(email);
        setFollower(follower);
        setFollowing(following);
        setGender(gender);
        setLevel(level);
        setNickname(nickname);
        setPassword(password);
        setPoint(point);
        setPostingCount(postingCount);
        setRole(role);
        setImageId(imageId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(com.example.jooq.tables.pojos.Users value) {
        super(Users.USERS);

        if (value != null) {
            setId(value.getId());
            setCreatedAt(value.getCreatedAt());
            setDeletedAt(value.getDeletedAt());
            setUpdatedAt(value.getUpdatedAt());
            setAddress(value.getAddress());
            setAge(value.getAge());
            setEmail(value.getEmail());
            setFollower(value.getFollower());
            setFollowing(value.getFollowing());
            setGender(value.getGender());
            setLevel(value.getLevel());
            setNickname(value.getNickname());
            setPassword(value.getPassword());
            setPoint(value.getPoint());
            setPostingCount(value.getPostingCount());
            setRole(value.getRole());
            setImageId(value.getImageId());
            resetChangedOnNotNull();
        }
    }
}
