/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.tables.BoardHashtag;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BoardHashtagRecord extends UpdatableRecordImpl<BoardHashtagRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taste.board_hashtag.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taste.board_hashtag.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taste.board_hashtag.board_id</code>.
     */
    public void setBoardId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>taste.board_hashtag.board_id</code>.
     */
    public Long getBoardId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>taste.board_hashtag.hashtag_id</code>.
     */
    public void setHashtagId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>taste.board_hashtag.hashtag_id</code>.
     */
    public Long getHashtagId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return BoardHashtag.BOARD_HASHTAG.ID;
    }

    @Override
    public Field<Long> field2() {
        return BoardHashtag.BOARD_HASHTAG.BOARD_ID;
    }

    @Override
    public Field<Long> field3() {
        return BoardHashtag.BOARD_HASHTAG.HASHTAG_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getBoardId();
    }

    @Override
    public Long component3() {
        return getHashtagId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getBoardId();
    }

    @Override
    public Long value3() {
        return getHashtagId();
    }

    @Override
    public BoardHashtagRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public BoardHashtagRecord value2(Long value) {
        setBoardId(value);
        return this;
    }

    @Override
    public BoardHashtagRecord value3(Long value) {
        setHashtagId(value);
        return this;
    }

    @Override
    public BoardHashtagRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BoardHashtagRecord
     */
    public BoardHashtagRecord() {
        super(BoardHashtag.BOARD_HASHTAG);
    }

    /**
     * Create a detached, initialised BoardHashtagRecord
     */
    public BoardHashtagRecord(Long id, Long boardId, Long hashtagId) {
        super(BoardHashtag.BOARD_HASHTAG);

        setId(id);
        setBoardId(boardId);
        setHashtagId(hashtagId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised BoardHashtagRecord
     */
    public BoardHashtagRecord(com.example.jooq.tables.pojos.BoardHashtag value) {
        super(BoardHashtag.BOARD_HASHTAG);

        if (value != null) {
            setId(value.getId());
            setBoardId(value.getBoardId());
            setHashtagId(value.getHashtagId());
            resetChangedOnNotNull();
        }
    }
}
