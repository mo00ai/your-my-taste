/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.enums.UserMatchInfoMatchStatus;
import com.example.jooq.enums.UserMatchInfoUserGender;
import com.example.jooq.tables.UserMatchInfo;

import java.time.LocalDate;
import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserMatchInfoRecord extends UpdatableRecordImpl<UserMatchInfoRecord> implements Record12<Long, LocalDateTime, Integer, Integer, LocalDateTime, UserMatchInfoMatchStatus, LocalDate, String, String, Integer, UserMatchInfoUserGender, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taste.user_match_info.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taste.user_match_info.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taste.user_match_info.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>taste.user_match_info.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>taste.user_match_info.max_age</code>.
     */
    public void setMaxAge(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>taste.user_match_info.max_age</code>.
     */
    public Integer getMaxAge() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>taste.user_match_info.min_age</code>.
     */
    public void setMinAge(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>taste.user_match_info.min_age</code>.
     */
    public Integer getMinAge() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>taste.user_match_info.match_started_at</code>.
     */
    public void setMatchStartedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>taste.user_match_info.match_started_at</code>.
     */
    public LocalDateTime getMatchStartedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>taste.user_match_info.match_status</code>.
     */
    public void setMatchStatus(UserMatchInfoMatchStatus value) {
        set(5, value);
    }

    /**
     * Getter for <code>taste.user_match_info.match_status</code>.
     */
    public UserMatchInfoMatchStatus getMatchStatus() {
        return (UserMatchInfoMatchStatus) get(5);
    }

    /**
     * Setter for <code>taste.user_match_info.meeting_date</code>.
     */
    public void setMeetingDate(LocalDate value) {
        set(6, value);
    }

    /**
     * Getter for <code>taste.user_match_info.meeting_date</code>.
     */
    public LocalDate getMeetingDate() {
        return (LocalDate) get(6);
    }

    /**
     * Setter for <code>taste.user_match_info.region</code>.
     */
    public void setRegion(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>taste.user_match_info.region</code>.
     */
    public String getRegion() {
        return (String) get(7);
    }

    /**
     * Setter for <code>taste.user_match_info.title</code>.
     */
    public void setTitle(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>taste.user_match_info.title</code>.
     */
    public String getTitle() {
        return (String) get(8);
    }

    /**
     * Setter for <code>taste.user_match_info.user_age</code>.
     */
    public void setUserAge(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>taste.user_match_info.user_age</code>.
     */
    public Integer getUserAge() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>taste.user_match_info.user_gender</code>.
     */
    public void setUserGender(UserMatchInfoUserGender value) {
        set(10, value);
    }

    /**
     * Getter for <code>taste.user_match_info.user_gender</code>.
     */
    public UserMatchInfoUserGender getUserGender() {
        return (UserMatchInfoUserGender) get(10);
    }

    /**
     * Setter for <code>taste.user_match_info.user_id</code>.
     */
    public void setUserId(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>taste.user_match_info.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, LocalDateTime, Integer, Integer, LocalDateTime, UserMatchInfoMatchStatus, LocalDate, String, String, Integer, UserMatchInfoUserGender, Long> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, LocalDateTime, Integer, Integer, LocalDateTime, UserMatchInfoMatchStatus, LocalDate, String, String, Integer, UserMatchInfoUserGender, Long> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserMatchInfo.USER_MATCH_INFO.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return UserMatchInfo.USER_MATCH_INFO.CREATED_AT;
    }

    @Override
    public Field<Integer> field3() {
        return UserMatchInfo.USER_MATCH_INFO.MAX_AGE;
    }

    @Override
    public Field<Integer> field4() {
        return UserMatchInfo.USER_MATCH_INFO.MIN_AGE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return UserMatchInfo.USER_MATCH_INFO.MATCH_STARTED_AT;
    }

    @Override
    public Field<UserMatchInfoMatchStatus> field6() {
        return UserMatchInfo.USER_MATCH_INFO.MATCH_STATUS;
    }

    @Override
    public Field<LocalDate> field7() {
        return UserMatchInfo.USER_MATCH_INFO.MEETING_DATE;
    }

    @Override
    public Field<String> field8() {
        return UserMatchInfo.USER_MATCH_INFO.REGION;
    }

    @Override
    public Field<String> field9() {
        return UserMatchInfo.USER_MATCH_INFO.TITLE;
    }

    @Override
    public Field<Integer> field10() {
        return UserMatchInfo.USER_MATCH_INFO.USER_AGE;
    }

    @Override
    public Field<UserMatchInfoUserGender> field11() {
        return UserMatchInfo.USER_MATCH_INFO.USER_GENDER;
    }

    @Override
    public Field<Long> field12() {
        return UserMatchInfo.USER_MATCH_INFO.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public Integer component3() {
        return getMaxAge();
    }

    @Override
    public Integer component4() {
        return getMinAge();
    }

    @Override
    public LocalDateTime component5() {
        return getMatchStartedAt();
    }

    @Override
    public UserMatchInfoMatchStatus component6() {
        return getMatchStatus();
    }

    @Override
    public LocalDate component7() {
        return getMeetingDate();
    }

    @Override
    public String component8() {
        return getRegion();
    }

    @Override
    public String component9() {
        return getTitle();
    }

    @Override
    public Integer component10() {
        return getUserAge();
    }

    @Override
    public UserMatchInfoUserGender component11() {
        return getUserGender();
    }

    @Override
    public Long component12() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public Integer value3() {
        return getMaxAge();
    }

    @Override
    public Integer value4() {
        return getMinAge();
    }

    @Override
    public LocalDateTime value5() {
        return getMatchStartedAt();
    }

    @Override
    public UserMatchInfoMatchStatus value6() {
        return getMatchStatus();
    }

    @Override
    public LocalDate value7() {
        return getMeetingDate();
    }

    @Override
    public String value8() {
        return getRegion();
    }

    @Override
    public String value9() {
        return getTitle();
    }

    @Override
    public Integer value10() {
        return getUserAge();
    }

    @Override
    public UserMatchInfoUserGender value11() {
        return getUserGender();
    }

    @Override
    public Long value12() {
        return getUserId();
    }

    @Override
    public UserMatchInfoRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserMatchInfoRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UserMatchInfoRecord value3(Integer value) {
        setMaxAge(value);
        return this;
    }

    @Override
    public UserMatchInfoRecord value4(Integer value) {
        setMinAge(value);
        return this;
    }

    @Override
    public UserMatchInfoRecord value5(LocalDateTime value) {
        setMatchStartedAt(value);
        return this;
    }

    @Override
    public UserMatchInfoRecord value6(UserMatchInfoMatchStatus value) {
        setMatchStatus(value);
        return this;
    }

    @Override
    public UserMatchInfoRecord value7(LocalDate value) {
        setMeetingDate(value);
        return this;
    }

    @Override
    public UserMatchInfoRecord value8(String value) {
        setRegion(value);
        return this;
    }

    @Override
    public UserMatchInfoRecord value9(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public UserMatchInfoRecord value10(Integer value) {
        setUserAge(value);
        return this;
    }

    @Override
    public UserMatchInfoRecord value11(UserMatchInfoUserGender value) {
        setUserGender(value);
        return this;
    }

    @Override
    public UserMatchInfoRecord value12(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserMatchInfoRecord values(Long value1, LocalDateTime value2, Integer value3, Integer value4, LocalDateTime value5, UserMatchInfoMatchStatus value6, LocalDate value7, String value8, String value9, Integer value10, UserMatchInfoUserGender value11, Long value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserMatchInfoRecord
     */
    public UserMatchInfoRecord() {
        super(UserMatchInfo.USER_MATCH_INFO);
    }

    /**
     * Create a detached, initialised UserMatchInfoRecord
     */
    public UserMatchInfoRecord(Long id, LocalDateTime createdAt, Integer maxAge, Integer minAge, LocalDateTime matchStartedAt, UserMatchInfoMatchStatus matchStatus, LocalDate meetingDate, String region, String title, Integer userAge, UserMatchInfoUserGender userGender, Long userId) {
        super(UserMatchInfo.USER_MATCH_INFO);

        setId(id);
        setCreatedAt(createdAt);
        setMaxAge(maxAge);
        setMinAge(minAge);
        setMatchStartedAt(matchStartedAt);
        setMatchStatus(matchStatus);
        setMeetingDate(meetingDate);
        setRegion(region);
        setTitle(title);
        setUserAge(userAge);
        setUserGender(userGender);
        setUserId(userId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserMatchInfoRecord
     */
    public UserMatchInfoRecord(com.example.jooq.tables.pojos.UserMatchInfo value) {
        super(UserMatchInfo.USER_MATCH_INFO);

        if (value != null) {
            setId(value.getId());
            setCreatedAt(value.getCreatedAt());
            setMaxAge(value.getMaxAge());
            setMinAge(value.getMinAge());
            setMatchStartedAt(value.getMatchStartedAt());
            setMatchStatus(value.getMatchStatus());
            setMeetingDate(value.getMeetingDate());
            setRegion(value.getRegion());
            setTitle(value.getTitle());
            setUserAge(value.getUserAge());
            setUserGender(value.getUserGender());
            setUserId(value.getUserId());
            resetChangedOnNotNull();
        }
    }
}
