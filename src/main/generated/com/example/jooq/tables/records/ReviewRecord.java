/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.tables.Review;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReviewRecord extends UpdatableRecordImpl<ReviewRecord> implements Record10<Long, LocalDateTime, LocalDateTime, String, Boolean, Boolean, Byte, Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taste.review.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taste.review.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taste.review.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>taste.review.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>taste.review.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>taste.review.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>taste.review.contents</code>.
     */
    public void setContents(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>taste.review.contents</code>.
     */
    public String getContents() {
        return (String) get(3);
    }

    /**
     * Setter for <code>taste.review.is_presented</code>.
     */
    public void setIsPresented(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>taste.review.is_presented</code>.
     */
    public Boolean getIsPresented() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>taste.review.is_validated</code>.
     */
    public void setIsValidated(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>taste.review.is_validated</code>.
     */
    public Boolean getIsValidated() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>taste.review.score</code>.
     */
    public void setScore(Byte value) {
        set(6, value);
    }

    /**
     * Getter for <code>taste.review.score</code>.
     */
    public Byte getScore() {
        return (Byte) get(6);
    }

    /**
     * Setter for <code>taste.review.image_id</code>.
     */
    public void setImageId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>taste.review.image_id</code>.
     */
    public Long getImageId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>taste.review.store_id</code>.
     */
    public void setStoreId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>taste.review.store_id</code>.
     */
    public Long getStoreId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>taste.review.user_id</code>.
     */
    public void setUserId(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>taste.review.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, LocalDateTime, LocalDateTime, String, Boolean, Boolean, Byte, Long, Long, Long> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Long, LocalDateTime, LocalDateTime, String, Boolean, Boolean, Byte, Long, Long, Long> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Review.REVIEW.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Review.REVIEW.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Review.REVIEW.UPDATED_AT;
    }

    @Override
    public Field<String> field4() {
        return Review.REVIEW.CONTENTS;
    }

    @Override
    public Field<Boolean> field5() {
        return Review.REVIEW.IS_PRESENTED;
    }

    @Override
    public Field<Boolean> field6() {
        return Review.REVIEW.IS_VALIDATED;
    }

    @Override
    public Field<Byte> field7() {
        return Review.REVIEW.SCORE;
    }

    @Override
    public Field<Long> field8() {
        return Review.REVIEW.IMAGE_ID;
    }

    @Override
    public Field<Long> field9() {
        return Review.REVIEW.STORE_ID;
    }

    @Override
    public Field<Long> field10() {
        return Review.REVIEW.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component3() {
        return getUpdatedAt();
    }

    @Override
    public String component4() {
        return getContents();
    }

    @Override
    public Boolean component5() {
        return getIsPresented();
    }

    @Override
    public Boolean component6() {
        return getIsValidated();
    }

    @Override
    public Byte component7() {
        return getScore();
    }

    @Override
    public Long component8() {
        return getImageId();
    }

    @Override
    public Long component9() {
        return getStoreId();
    }

    @Override
    public Long component10() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value3() {
        return getUpdatedAt();
    }

    @Override
    public String value4() {
        return getContents();
    }

    @Override
    public Boolean value5() {
        return getIsPresented();
    }

    @Override
    public Boolean value6() {
        return getIsValidated();
    }

    @Override
    public Byte value7() {
        return getScore();
    }

    @Override
    public Long value8() {
        return getImageId();
    }

    @Override
    public Long value9() {
        return getStoreId();
    }

    @Override
    public Long value10() {
        return getUserId();
    }

    @Override
    public ReviewRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ReviewRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public ReviewRecord value3(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public ReviewRecord value4(String value) {
        setContents(value);
        return this;
    }

    @Override
    public ReviewRecord value5(Boolean value) {
        setIsPresented(value);
        return this;
    }

    @Override
    public ReviewRecord value6(Boolean value) {
        setIsValidated(value);
        return this;
    }

    @Override
    public ReviewRecord value7(Byte value) {
        setScore(value);
        return this;
    }

    @Override
    public ReviewRecord value8(Long value) {
        setImageId(value);
        return this;
    }

    @Override
    public ReviewRecord value9(Long value) {
        setStoreId(value);
        return this;
    }

    @Override
    public ReviewRecord value10(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public ReviewRecord values(Long value1, LocalDateTime value2, LocalDateTime value3, String value4, Boolean value5, Boolean value6, Byte value7, Long value8, Long value9, Long value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReviewRecord
     */
    public ReviewRecord() {
        super(Review.REVIEW);
    }

    /**
     * Create a detached, initialised ReviewRecord
     */
    public ReviewRecord(Long id, LocalDateTime createdAt, LocalDateTime updatedAt, String contents, Boolean isPresented, Boolean isValidated, Byte score, Long imageId, Long storeId, Long userId) {
        super(Review.REVIEW);

        setId(id);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        setContents(contents);
        setIsPresented(isPresented);
        setIsValidated(isValidated);
        setScore(score);
        setImageId(imageId);
        setStoreId(storeId);
        setUserId(userId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ReviewRecord
     */
    public ReviewRecord(com.example.jooq.tables.pojos.Review value) {
        super(Review.REVIEW);

        if (value != null) {
            setId(value.getId());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            setContents(value.getContents());
            setIsPresented(value.getIsPresented());
            setIsValidated(value.getIsValidated());
            setScore(value.getScore());
            setImageId(value.getImageId());
            setStoreId(value.getStoreId());
            setUserId(value.getUserId());
            resetChangedOnNotNull();
        }
    }
}
