/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.records;


import com.example.jooq.tables.PkTerm;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PkTermRecord extends UpdatableRecordImpl<PkTermRecord> implements Record4<Long, LocalDateTime, LocalDateTime, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>taste.pk_term.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>taste.pk_term.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>taste.pk_term.end_date</code>.
     */
    public void setEndDate(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>taste.pk_term.end_date</code>.
     */
    public LocalDateTime getEndDate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>taste.pk_term.start_date</code>.
     */
    public void setStartDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>taste.pk_term.start_date</code>.
     */
    public LocalDateTime getStartDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>taste.pk_term.term</code>.
     */
    public void setTerm(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>taste.pk_term.term</code>.
     */
    public Integer getTerm() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, LocalDateTime, LocalDateTime, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, LocalDateTime, LocalDateTime, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return PkTerm.PK_TERM.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return PkTerm.PK_TERM.END_DATE;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return PkTerm.PK_TERM.START_DATE;
    }

    @Override
    public Field<Integer> field4() {
        return PkTerm.PK_TERM.TERM;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getEndDate();
    }

    @Override
    public LocalDateTime component3() {
        return getStartDate();
    }

    @Override
    public Integer component4() {
        return getTerm();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getEndDate();
    }

    @Override
    public LocalDateTime value3() {
        return getStartDate();
    }

    @Override
    public Integer value4() {
        return getTerm();
    }

    @Override
    public PkTermRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PkTermRecord value2(LocalDateTime value) {
        setEndDate(value);
        return this;
    }

    @Override
    public PkTermRecord value3(LocalDateTime value) {
        setStartDate(value);
        return this;
    }

    @Override
    public PkTermRecord value4(Integer value) {
        setTerm(value);
        return this;
    }

    @Override
    public PkTermRecord values(Long value1, LocalDateTime value2, LocalDateTime value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PkTermRecord
     */
    public PkTermRecord() {
        super(PkTerm.PK_TERM);
    }

    /**
     * Create a detached, initialised PkTermRecord
     */
    public PkTermRecord(Long id, LocalDateTime endDate, LocalDateTime startDate, Integer term) {
        super(PkTerm.PK_TERM);

        setId(id);
        setEndDate(endDate);
        setStartDate(startDate);
        setTerm(term);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PkTermRecord
     */
    public PkTermRecord(com.example.jooq.tables.pojos.PkTerm value) {
        super(PkTerm.PK_TERM);

        if (value != null) {
            setId(value.getId());
            setEndDate(value.getEndDate());
            setStartDate(value.getStartDate());
            setTerm(value.getTerm());
            resetChangedOnNotNull();
        }
    }
}
