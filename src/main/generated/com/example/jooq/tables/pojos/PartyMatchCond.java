/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.pojos;


import com.example.jooq.enums.PartyMatchCondGender;
import com.example.jooq.enums.PartyMatchCondMatchingStatus;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartyMatchCond implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private LocalDateTime createdAt;
    private Integer ageMaxRange;
    private Integer ageMinRange;
    private PartyMatchCondGender gender;
    private PartyMatchCondMatchingStatus matchingStatus;
    private String region;
    private Long partyId;

    public PartyMatchCond() {}

    public PartyMatchCond(PartyMatchCond value) {
        this.id = value.id;
        this.createdAt = value.createdAt;
        this.ageMaxRange = value.ageMaxRange;
        this.ageMinRange = value.ageMinRange;
        this.gender = value.gender;
        this.matchingStatus = value.matchingStatus;
        this.region = value.region;
        this.partyId = value.partyId;
    }

    public PartyMatchCond(
        Long id,
        LocalDateTime createdAt,
        Integer ageMaxRange,
        Integer ageMinRange,
        PartyMatchCondGender gender,
        PartyMatchCondMatchingStatus matchingStatus,
        String region,
        Long partyId
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.ageMaxRange = ageMaxRange;
        this.ageMinRange = ageMinRange;
        this.gender = gender;
        this.matchingStatus = matchingStatus;
        this.region = region;
        this.partyId = partyId;
    }

    /**
     * Getter for <code>taste.party_match_cond.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>taste.party_match_cond.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>taste.party_match_cond.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>taste.party_match_cond.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>taste.party_match_cond.age_max_range</code>.
     */
    public Integer getAgeMaxRange() {
        return this.ageMaxRange;
    }

    /**
     * Setter for <code>taste.party_match_cond.age_max_range</code>.
     */
    public void setAgeMaxRange(Integer ageMaxRange) {
        this.ageMaxRange = ageMaxRange;
    }

    /**
     * Getter for <code>taste.party_match_cond.age_min_range</code>.
     */
    public Integer getAgeMinRange() {
        return this.ageMinRange;
    }

    /**
     * Setter for <code>taste.party_match_cond.age_min_range</code>.
     */
    public void setAgeMinRange(Integer ageMinRange) {
        this.ageMinRange = ageMinRange;
    }

    /**
     * Getter for <code>taste.party_match_cond.gender</code>.
     */
    public PartyMatchCondGender getGender() {
        return this.gender;
    }

    /**
     * Setter for <code>taste.party_match_cond.gender</code>.
     */
    public void setGender(PartyMatchCondGender gender) {
        this.gender = gender;
    }

    /**
     * Getter for <code>taste.party_match_cond.matching_status</code>.
     */
    public PartyMatchCondMatchingStatus getMatchingStatus() {
        return this.matchingStatus;
    }

    /**
     * Setter for <code>taste.party_match_cond.matching_status</code>.
     */
    public void setMatchingStatus(PartyMatchCondMatchingStatus matchingStatus) {
        this.matchingStatus = matchingStatus;
    }

    /**
     * Getter for <code>taste.party_match_cond.region</code>.
     */
    public String getRegion() {
        return this.region;
    }

    /**
     * Setter for <code>taste.party_match_cond.region</code>.
     */
    public void setRegion(String region) {
        this.region = region;
    }

    /**
     * Getter for <code>taste.party_match_cond.party_id</code>.
     */
    public Long getPartyId() {
        return this.partyId;
    }

    /**
     * Setter for <code>taste.party_match_cond.party_id</code>.
     */
    public void setPartyId(Long partyId) {
        this.partyId = partyId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PartyMatchCond other = (PartyMatchCond) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.ageMaxRange == null) {
            if (other.ageMaxRange != null)
                return false;
        }
        else if (!this.ageMaxRange.equals(other.ageMaxRange))
            return false;
        if (this.ageMinRange == null) {
            if (other.ageMinRange != null)
                return false;
        }
        else if (!this.ageMinRange.equals(other.ageMinRange))
            return false;
        if (this.gender == null) {
            if (other.gender != null)
                return false;
        }
        else if (!this.gender.equals(other.gender))
            return false;
        if (this.matchingStatus == null) {
            if (other.matchingStatus != null)
                return false;
        }
        else if (!this.matchingStatus.equals(other.matchingStatus))
            return false;
        if (this.region == null) {
            if (other.region != null)
                return false;
        }
        else if (!this.region.equals(other.region))
            return false;
        if (this.partyId == null) {
            if (other.partyId != null)
                return false;
        }
        else if (!this.partyId.equals(other.partyId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.ageMaxRange == null) ? 0 : this.ageMaxRange.hashCode());
        result = prime * result + ((this.ageMinRange == null) ? 0 : this.ageMinRange.hashCode());
        result = prime * result + ((this.gender == null) ? 0 : this.gender.hashCode());
        result = prime * result + ((this.matchingStatus == null) ? 0 : this.matchingStatus.hashCode());
        result = prime * result + ((this.region == null) ? 0 : this.region.hashCode());
        result = prime * result + ((this.partyId == null) ? 0 : this.partyId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PartyMatchCond (");

        sb.append(id);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(ageMaxRange);
        sb.append(", ").append(ageMinRange);
        sb.append(", ").append(gender);
        sb.append(", ").append(matchingStatus);
        sb.append(", ").append(region);
        sb.append(", ").append(partyId);

        sb.append(")");
        return sb.toString();
    }
}
