/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.pojos;


import com.example.jooq.enums.PartyInvitationInvitationStatus;
import com.example.jooq.enums.PartyInvitationInvitationType;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PartyInvitation implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private LocalDateTime createdAt;
    private PartyInvitationInvitationStatus invitationStatus;
    private PartyInvitationInvitationType invitationType;
    private Long partyId;
    private Long userId;
    private Long userMatchInfoId;

    public PartyInvitation() {}

    public PartyInvitation(PartyInvitation value) {
        this.id = value.id;
        this.createdAt = value.createdAt;
        this.invitationStatus = value.invitationStatus;
        this.invitationType = value.invitationType;
        this.partyId = value.partyId;
        this.userId = value.userId;
        this.userMatchInfoId = value.userMatchInfoId;
    }

    public PartyInvitation(
        Long id,
        LocalDateTime createdAt,
        PartyInvitationInvitationStatus invitationStatus,
        PartyInvitationInvitationType invitationType,
        Long partyId,
        Long userId,
        Long userMatchInfoId
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.invitationStatus = invitationStatus;
        this.invitationType = invitationType;
        this.partyId = partyId;
        this.userId = userId;
        this.userMatchInfoId = userMatchInfoId;
    }

    /**
     * Getter for <code>taste.party_invitation.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>taste.party_invitation.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>taste.party_invitation.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>taste.party_invitation.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>taste.party_invitation.invitation_status</code>.
     */
    public PartyInvitationInvitationStatus getInvitationStatus() {
        return this.invitationStatus;
    }

    /**
     * Setter for <code>taste.party_invitation.invitation_status</code>.
     */
    public void setInvitationStatus(PartyInvitationInvitationStatus invitationStatus) {
        this.invitationStatus = invitationStatus;
    }

    /**
     * Getter for <code>taste.party_invitation.invitation_type</code>.
     */
    public PartyInvitationInvitationType getInvitationType() {
        return this.invitationType;
    }

    /**
     * Setter for <code>taste.party_invitation.invitation_type</code>.
     */
    public void setInvitationType(PartyInvitationInvitationType invitationType) {
        this.invitationType = invitationType;
    }

    /**
     * Getter for <code>taste.party_invitation.party_id</code>.
     */
    public Long getPartyId() {
        return this.partyId;
    }

    /**
     * Setter for <code>taste.party_invitation.party_id</code>.
     */
    public void setPartyId(Long partyId) {
        this.partyId = partyId;
    }

    /**
     * Getter for <code>taste.party_invitation.user_id</code>.
     */
    public Long getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>taste.party_invitation.user_id</code>.
     */
    public void setUserId(Long userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>taste.party_invitation.user_match_info_id</code>.
     */
    public Long getUserMatchInfoId() {
        return this.userMatchInfoId;
    }

    /**
     * Setter for <code>taste.party_invitation.user_match_info_id</code>.
     */
    public void setUserMatchInfoId(Long userMatchInfoId) {
        this.userMatchInfoId = userMatchInfoId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PartyInvitation other = (PartyInvitation) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.invitationStatus == null) {
            if (other.invitationStatus != null)
                return false;
        }
        else if (!this.invitationStatus.equals(other.invitationStatus))
            return false;
        if (this.invitationType == null) {
            if (other.invitationType != null)
                return false;
        }
        else if (!this.invitationType.equals(other.invitationType))
            return false;
        if (this.partyId == null) {
            if (other.partyId != null)
                return false;
        }
        else if (!this.partyId.equals(other.partyId))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.userMatchInfoId == null) {
            if (other.userMatchInfoId != null)
                return false;
        }
        else if (!this.userMatchInfoId.equals(other.userMatchInfoId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.invitationStatus == null) ? 0 : this.invitationStatus.hashCode());
        result = prime * result + ((this.invitationType == null) ? 0 : this.invitationType.hashCode());
        result = prime * result + ((this.partyId == null) ? 0 : this.partyId.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.userMatchInfoId == null) ? 0 : this.userMatchInfoId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PartyInvitation (");

        sb.append(id);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(invitationStatus);
        sb.append(", ").append(invitationType);
        sb.append(", ").append(partyId);
        sb.append(", ").append(userId);
        sb.append(", ").append(userMatchInfoId);

        sb.append(")");
        return sb.toString();
    }
}
