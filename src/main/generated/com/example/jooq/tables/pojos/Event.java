/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Event implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String contents;
    private LocalDate endDate;
    private Boolean isActive;
    private String name;
    private LocalDate startDate;
    private Long userId;

    public Event() {}

    public Event(Event value) {
        this.id = value.id;
        this.contents = value.contents;
        this.endDate = value.endDate;
        this.isActive = value.isActive;
        this.name = value.name;
        this.startDate = value.startDate;
        this.userId = value.userId;
    }

    public Event(
        Long id,
        String contents,
        LocalDate endDate,
        Boolean isActive,
        String name,
        LocalDate startDate,
        Long userId
    ) {
        this.id = id;
        this.contents = contents;
        this.endDate = endDate;
        this.isActive = isActive;
        this.name = name;
        this.startDate = startDate;
        this.userId = userId;
    }

    /**
     * Getter for <code>taste.event.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>taste.event.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>taste.event.contents</code>.
     */
    public String getContents() {
        return this.contents;
    }

    /**
     * Setter for <code>taste.event.contents</code>.
     */
    public void setContents(String contents) {
        this.contents = contents;
    }

    /**
     * Getter for <code>taste.event.end_date</code>.
     */
    public LocalDate getEndDate() {
        return this.endDate;
    }

    /**
     * Setter for <code>taste.event.end_date</code>.
     */
    public void setEndDate(LocalDate endDate) {
        this.endDate = endDate;
    }

    /**
     * Getter for <code>taste.event.is_active</code>.
     */
    public Boolean getIsActive() {
        return this.isActive;
    }

    /**
     * Setter for <code>taste.event.is_active</code>.
     */
    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    /**
     * Getter for <code>taste.event.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>taste.event.name</code>.
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>taste.event.start_date</code>.
     */
    public LocalDate getStartDate() {
        return this.startDate;
    }

    /**
     * Setter for <code>taste.event.start_date</code>.
     */
    public void setStartDate(LocalDate startDate) {
        this.startDate = startDate;
    }

    /**
     * Getter for <code>taste.event.user_id</code>.
     */
    public Long getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>taste.event.user_id</code>.
     */
    public void setUserId(Long userId) {
        this.userId = userId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Event other = (Event) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.contents == null) {
            if (other.contents != null)
                return false;
        }
        else if (!this.contents.equals(other.contents))
            return false;
        if (this.endDate == null) {
            if (other.endDate != null)
                return false;
        }
        else if (!this.endDate.equals(other.endDate))
            return false;
        if (this.isActive == null) {
            if (other.isActive != null)
                return false;
        }
        else if (!this.isActive.equals(other.isActive))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.startDate == null) {
            if (other.startDate != null)
                return false;
        }
        else if (!this.startDate.equals(other.startDate))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.contents == null) ? 0 : this.contents.hashCode());
        result = prime * result + ((this.endDate == null) ? 0 : this.endDate.hashCode());
        result = prime * result + ((this.isActive == null) ? 0 : this.isActive.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.startDate == null) ? 0 : this.startDate.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Event (");

        sb.append(id);
        sb.append(", ").append(contents);
        sb.append(", ").append(endDate);
        sb.append(", ").append(isActive);
        sb.append(", ").append(name);
        sb.append(", ").append(startDate);
        sb.append(", ").append(userId);

        sb.append(")");
        return sb.toString();
    }
}
