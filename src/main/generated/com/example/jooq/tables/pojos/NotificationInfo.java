/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.pojos;


import com.example.jooq.enums.NotificationInfoCategory;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationInfo implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private NotificationInfoCategory category;
    private Boolean isRead;
    private Long notificationContentId;
    private Long notificationTarget;

    public NotificationInfo() {}

    public NotificationInfo(NotificationInfo value) {
        this.id = value.id;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.category = value.category;
        this.isRead = value.isRead;
        this.notificationContentId = value.notificationContentId;
        this.notificationTarget = value.notificationTarget;
    }

    public NotificationInfo(
        Long id,
        LocalDateTime createdAt,
        LocalDateTime updatedAt,
        NotificationInfoCategory category,
        Boolean isRead,
        Long notificationContentId,
        Long notificationTarget
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.category = category;
        this.isRead = isRead;
        this.notificationContentId = notificationContentId;
        this.notificationTarget = notificationTarget;
    }

    /**
     * Getter for <code>taste.notification_info.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>taste.notification_info.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>taste.notification_info.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>taste.notification_info.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>taste.notification_info.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>taste.notification_info.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>taste.notification_info.category</code>.
     */
    public NotificationInfoCategory getCategory() {
        return this.category;
    }

    /**
     * Setter for <code>taste.notification_info.category</code>.
     */
    public void setCategory(NotificationInfoCategory category) {
        this.category = category;
    }

    /**
     * Getter for <code>taste.notification_info.is_read</code>.
     */
    public Boolean getIsRead() {
        return this.isRead;
    }

    /**
     * Setter for <code>taste.notification_info.is_read</code>.
     */
    public void setIsRead(Boolean isRead) {
        this.isRead = isRead;
    }

    /**
     * Getter for <code>taste.notification_info.notification_content_id</code>.
     */
    public Long getNotificationContentId() {
        return this.notificationContentId;
    }

    /**
     * Setter for <code>taste.notification_info.notification_content_id</code>.
     */
    public void setNotificationContentId(Long notificationContentId) {
        this.notificationContentId = notificationContentId;
    }

    /**
     * Getter for <code>taste.notification_info.notification_target</code>.
     */
    public Long getNotificationTarget() {
        return this.notificationTarget;
    }

    /**
     * Setter for <code>taste.notification_info.notification_target</code>.
     */
    public void setNotificationTarget(Long notificationTarget) {
        this.notificationTarget = notificationTarget;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final NotificationInfo other = (NotificationInfo) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.category == null) {
            if (other.category != null)
                return false;
        }
        else if (!this.category.equals(other.category))
            return false;
        if (this.isRead == null) {
            if (other.isRead != null)
                return false;
        }
        else if (!this.isRead.equals(other.isRead))
            return false;
        if (this.notificationContentId == null) {
            if (other.notificationContentId != null)
                return false;
        }
        else if (!this.notificationContentId.equals(other.notificationContentId))
            return false;
        if (this.notificationTarget == null) {
            if (other.notificationTarget != null)
                return false;
        }
        else if (!this.notificationTarget.equals(other.notificationTarget))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.category == null) ? 0 : this.category.hashCode());
        result = prime * result + ((this.isRead == null) ? 0 : this.isRead.hashCode());
        result = prime * result + ((this.notificationContentId == null) ? 0 : this.notificationContentId.hashCode());
        result = prime * result + ((this.notificationTarget == null) ? 0 : this.notificationTarget.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("NotificationInfo (");

        sb.append(id);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(category);
        sb.append(", ").append(isRead);
        sb.append(", ").append(notificationContentId);
        sb.append(", ").append(notificationTarget);

        sb.append(")");
        return sb.toString();
    }
}
