/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.pojos;


import com.example.jooq.enums.ImageType;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Image implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private String fileExtension;
    private Long fileSize;
    private String originFileName;
    private ImageType type;
    private String uploadFileName;
    private String url;

    public Image() {}

    public Image(Image value) {
        this.id = value.id;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
        this.fileExtension = value.fileExtension;
        this.fileSize = value.fileSize;
        this.originFileName = value.originFileName;
        this.type = value.type;
        this.uploadFileName = value.uploadFileName;
        this.url = value.url;
    }

    public Image(
        Long id,
        LocalDateTime createdAt,
        LocalDateTime updatedAt,
        String fileExtension,
        Long fileSize,
        String originFileName,
        ImageType type,
        String uploadFileName,
        String url
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.fileExtension = fileExtension;
        this.fileSize = fileSize;
        this.originFileName = originFileName;
        this.type = type;
        this.uploadFileName = uploadFileName;
        this.url = url;
    }

    /**
     * Getter for <code>taste.image.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>taste.image.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>taste.image.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>taste.image.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>taste.image.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>taste.image.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>taste.image.file_extension</code>.
     */
    public String getFileExtension() {
        return this.fileExtension;
    }

    /**
     * Setter for <code>taste.image.file_extension</code>.
     */
    public void setFileExtension(String fileExtension) {
        this.fileExtension = fileExtension;
    }

    /**
     * Getter for <code>taste.image.file_size</code>.
     */
    public Long getFileSize() {
        return this.fileSize;
    }

    /**
     * Setter for <code>taste.image.file_size</code>.
     */
    public void setFileSize(Long fileSize) {
        this.fileSize = fileSize;
    }

    /**
     * Getter for <code>taste.image.origin_file_name</code>.
     */
    public String getOriginFileName() {
        return this.originFileName;
    }

    /**
     * Setter for <code>taste.image.origin_file_name</code>.
     */
    public void setOriginFileName(String originFileName) {
        this.originFileName = originFileName;
    }

    /**
     * Getter for <code>taste.image.type</code>.
     */
    public ImageType getType() {
        return this.type;
    }

    /**
     * Setter for <code>taste.image.type</code>.
     */
    public void setType(ImageType type) {
        this.type = type;
    }

    /**
     * Getter for <code>taste.image.upload_file_name</code>.
     */
    public String getUploadFileName() {
        return this.uploadFileName;
    }

    /**
     * Setter for <code>taste.image.upload_file_name</code>.
     */
    public void setUploadFileName(String uploadFileName) {
        this.uploadFileName = uploadFileName;
    }

    /**
     * Getter for <code>taste.image.url</code>.
     */
    public String getUrl() {
        return this.url;
    }

    /**
     * Setter for <code>taste.image.url</code>.
     */
    public void setUrl(String url) {
        this.url = url;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Image other = (Image) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.fileExtension == null) {
            if (other.fileExtension != null)
                return false;
        }
        else if (!this.fileExtension.equals(other.fileExtension))
            return false;
        if (this.fileSize == null) {
            if (other.fileSize != null)
                return false;
        }
        else if (!this.fileSize.equals(other.fileSize))
            return false;
        if (this.originFileName == null) {
            if (other.originFileName != null)
                return false;
        }
        else if (!this.originFileName.equals(other.originFileName))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        }
        else if (!this.type.equals(other.type))
            return false;
        if (this.uploadFileName == null) {
            if (other.uploadFileName != null)
                return false;
        }
        else if (!this.uploadFileName.equals(other.uploadFileName))
            return false;
        if (this.url == null) {
            if (other.url != null)
                return false;
        }
        else if (!this.url.equals(other.url))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.fileExtension == null) ? 0 : this.fileExtension.hashCode());
        result = prime * result + ((this.fileSize == null) ? 0 : this.fileSize.hashCode());
        result = prime * result + ((this.originFileName == null) ? 0 : this.originFileName.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.uploadFileName == null) ? 0 : this.uploadFileName.hashCode());
        result = prime * result + ((this.url == null) ? 0 : this.url.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Image (");

        sb.append(id);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(fileExtension);
        sb.append(", ").append(fileSize);
        sb.append(", ").append(originFileName);
        sb.append(", ").append(type);
        sb.append(", ").append(uploadFileName);
        sb.append(", ").append(url);

        sb.append(")");
        return sb.toString();
    }
}
