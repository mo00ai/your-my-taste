/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.pojos;


import com.example.jooq.enums.UsersGender;
import com.example.jooq.enums.UsersLevel;
import com.example.jooq.enums.UsersRole;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private LocalDateTime createdAt;
    private LocalDateTime deletedAt;
    private LocalDateTime updatedAt;
    private String address;
    private Integer age;
    private String email;
    private Integer follower;
    private Integer following;
    private UsersGender gender;
    private UsersLevel level;
    private String nickname;
    private String password;
    private Integer point;
    private Integer postingCount;
    private UsersRole role;
    private Long imageId;

    public Users() {}

    public Users(Users value) {
        this.id = value.id;
        this.createdAt = value.createdAt;
        this.deletedAt = value.deletedAt;
        this.updatedAt = value.updatedAt;
        this.address = value.address;
        this.age = value.age;
        this.email = value.email;
        this.follower = value.follower;
        this.following = value.following;
        this.gender = value.gender;
        this.level = value.level;
        this.nickname = value.nickname;
        this.password = value.password;
        this.point = value.point;
        this.postingCount = value.postingCount;
        this.role = value.role;
        this.imageId = value.imageId;
    }

    public Users(
        Long id,
        LocalDateTime createdAt,
        LocalDateTime deletedAt,
        LocalDateTime updatedAt,
        String address,
        Integer age,
        String email,
        Integer follower,
        Integer following,
        UsersGender gender,
        UsersLevel level,
        String nickname,
        String password,
        Integer point,
        Integer postingCount,
        UsersRole role,
        Long imageId
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.deletedAt = deletedAt;
        this.updatedAt = updatedAt;
        this.address = address;
        this.age = age;
        this.email = email;
        this.follower = follower;
        this.following = following;
        this.gender = gender;
        this.level = level;
        this.nickname = nickname;
        this.password = password;
        this.point = point;
        this.postingCount = postingCount;
        this.role = role;
        this.imageId = imageId;
    }

    /**
     * Getter for <code>taste.users.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>taste.users.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>taste.users.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>taste.users.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>taste.users.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return this.deletedAt;
    }

    /**
     * Setter for <code>taste.users.deleted_at</code>.
     */
    public void setDeletedAt(LocalDateTime deletedAt) {
        this.deletedAt = deletedAt;
    }

    /**
     * Getter for <code>taste.users.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>taste.users.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>taste.users.address</code>.
     */
    public String getAddress() {
        return this.address;
    }

    /**
     * Setter for <code>taste.users.address</code>.
     */
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * Getter for <code>taste.users.age</code>.
     */
    public Integer getAge() {
        return this.age;
    }

    /**
     * Setter for <code>taste.users.age</code>.
     */
    public void setAge(Integer age) {
        this.age = age;
    }

    /**
     * Getter for <code>taste.users.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>taste.users.email</code>.
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for <code>taste.users.follower</code>.
     */
    public Integer getFollower() {
        return this.follower;
    }

    /**
     * Setter for <code>taste.users.follower</code>.
     */
    public void setFollower(Integer follower) {
        this.follower = follower;
    }

    /**
     * Getter for <code>taste.users.following</code>.
     */
    public Integer getFollowing() {
        return this.following;
    }

    /**
     * Setter for <code>taste.users.following</code>.
     */
    public void setFollowing(Integer following) {
        this.following = following;
    }

    /**
     * Getter for <code>taste.users.gender</code>.
     */
    public UsersGender getGender() {
        return this.gender;
    }

    /**
     * Setter for <code>taste.users.gender</code>.
     */
    public void setGender(UsersGender gender) {
        this.gender = gender;
    }

    /**
     * Getter for <code>taste.users.level</code>.
     */
    public UsersLevel getLevel() {
        return this.level;
    }

    /**
     * Setter for <code>taste.users.level</code>.
     */
    public void setLevel(UsersLevel level) {
        this.level = level;
    }

    /**
     * Getter for <code>taste.users.nickname</code>.
     */
    public String getNickname() {
        return this.nickname;
    }

    /**
     * Setter for <code>taste.users.nickname</code>.
     */
    public void setNickname(String nickname) {
        this.nickname = nickname;
    }

    /**
     * Getter for <code>taste.users.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>taste.users.password</code>.
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for <code>taste.users.point</code>.
     */
    public Integer getPoint() {
        return this.point;
    }

    /**
     * Setter for <code>taste.users.point</code>.
     */
    public void setPoint(Integer point) {
        this.point = point;
    }

    /**
     * Getter for <code>taste.users.posting_count</code>.
     */
    public Integer getPostingCount() {
        return this.postingCount;
    }

    /**
     * Setter for <code>taste.users.posting_count</code>.
     */
    public void setPostingCount(Integer postingCount) {
        this.postingCount = postingCount;
    }

    /**
     * Getter for <code>taste.users.role</code>.
     */
    public UsersRole getRole() {
        return this.role;
    }

    /**
     * Setter for <code>taste.users.role</code>.
     */
    public void setRole(UsersRole role) {
        this.role = role;
    }

    /**
     * Getter for <code>taste.users.image_id</code>.
     */
    public Long getImageId() {
        return this.imageId;
    }

    /**
     * Setter for <code>taste.users.image_id</code>.
     */
    public void setImageId(Long imageId) {
        this.imageId = imageId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.deletedAt == null) {
            if (other.deletedAt != null)
                return false;
        }
        else if (!this.deletedAt.equals(other.deletedAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.address == null) {
            if (other.address != null)
                return false;
        }
        else if (!this.address.equals(other.address))
            return false;
        if (this.age == null) {
            if (other.age != null)
                return false;
        }
        else if (!this.age.equals(other.age))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.follower == null) {
            if (other.follower != null)
                return false;
        }
        else if (!this.follower.equals(other.follower))
            return false;
        if (this.following == null) {
            if (other.following != null)
                return false;
        }
        else if (!this.following.equals(other.following))
            return false;
        if (this.gender == null) {
            if (other.gender != null)
                return false;
        }
        else if (!this.gender.equals(other.gender))
            return false;
        if (this.level == null) {
            if (other.level != null)
                return false;
        }
        else if (!this.level.equals(other.level))
            return false;
        if (this.nickname == null) {
            if (other.nickname != null)
                return false;
        }
        else if (!this.nickname.equals(other.nickname))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.point == null) {
            if (other.point != null)
                return false;
        }
        else if (!this.point.equals(other.point))
            return false;
        if (this.postingCount == null) {
            if (other.postingCount != null)
                return false;
        }
        else if (!this.postingCount.equals(other.postingCount))
            return false;
        if (this.role == null) {
            if (other.role != null)
                return false;
        }
        else if (!this.role.equals(other.role))
            return false;
        if (this.imageId == null) {
            if (other.imageId != null)
                return false;
        }
        else if (!this.imageId.equals(other.imageId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.deletedAt == null) ? 0 : this.deletedAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.address == null) ? 0 : this.address.hashCode());
        result = prime * result + ((this.age == null) ? 0 : this.age.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.follower == null) ? 0 : this.follower.hashCode());
        result = prime * result + ((this.following == null) ? 0 : this.following.hashCode());
        result = prime * result + ((this.gender == null) ? 0 : this.gender.hashCode());
        result = prime * result + ((this.level == null) ? 0 : this.level.hashCode());
        result = prime * result + ((this.nickname == null) ? 0 : this.nickname.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.point == null) ? 0 : this.point.hashCode());
        result = prime * result + ((this.postingCount == null) ? 0 : this.postingCount.hashCode());
        result = prime * result + ((this.role == null) ? 0 : this.role.hashCode());
        result = prime * result + ((this.imageId == null) ? 0 : this.imageId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(id);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(deletedAt);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(address);
        sb.append(", ").append(age);
        sb.append(", ").append(email);
        sb.append(", ").append(follower);
        sb.append(", ").append(following);
        sb.append(", ").append(gender);
        sb.append(", ").append(level);
        sb.append(", ").append(nickname);
        sb.append(", ").append(password);
        sb.append(", ").append(point);
        sb.append(", ").append(postingCount);
        sb.append(", ").append(role);
        sb.append(", ").append(imageId);

        sb.append(")");
        return sb.toString();
    }
}
