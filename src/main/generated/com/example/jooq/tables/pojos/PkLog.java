/*
 * This file is generated by jOOQ.
 */
package com.example.jooq.tables.pojos;


import com.example.jooq.enums.PkLogPkType;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PkLog implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private LocalDateTime createdAt;
    private PkLogPkType pkType;
    private Integer point;
    private Long userId;

    public PkLog() {}

    public PkLog(PkLog value) {
        this.id = value.id;
        this.createdAt = value.createdAt;
        this.pkType = value.pkType;
        this.point = value.point;
        this.userId = value.userId;
    }

    public PkLog(
        Long id,
        LocalDateTime createdAt,
        PkLogPkType pkType,
        Integer point,
        Long userId
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.pkType = pkType;
        this.point = point;
        this.userId = userId;
    }

    /**
     * Getter for <code>taste.pk_log.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>taste.pk_log.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>taste.pk_log.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>taste.pk_log.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>taste.pk_log.pk_type</code>.
     */
    public PkLogPkType getPkType() {
        return this.pkType;
    }

    /**
     * Setter for <code>taste.pk_log.pk_type</code>.
     */
    public void setPkType(PkLogPkType pkType) {
        this.pkType = pkType;
    }

    /**
     * Getter for <code>taste.pk_log.point</code>.
     */
    public Integer getPoint() {
        return this.point;
    }

    /**
     * Setter for <code>taste.pk_log.point</code>.
     */
    public void setPoint(Integer point) {
        this.point = point;
    }

    /**
     * Getter for <code>taste.pk_log.user_id</code>.
     */
    public Long getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>taste.pk_log.user_id</code>.
     */
    public void setUserId(Long userId) {
        this.userId = userId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PkLog other = (PkLog) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.pkType == null) {
            if (other.pkType != null)
                return false;
        }
        else if (!this.pkType.equals(other.pkType))
            return false;
        if (this.point == null) {
            if (other.point != null)
                return false;
        }
        else if (!this.point.equals(other.point))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.pkType == null) ? 0 : this.pkType.hashCode());
        result = prime * result + ((this.point == null) ? 0 : this.point.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PkLog (");

        sb.append(id);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(pkType);
        sb.append(", ").append(point);
        sb.append(", ").append(userId);

        sb.append(")");
        return sb.toString();
    }
}
