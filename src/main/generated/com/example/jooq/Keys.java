/*
 * This file is generated by jOOQ.
 */
package com.example.jooq;


import com.example.jooq.tables.Board;
import com.example.jooq.tables.BoardEvent;
import com.example.jooq.tables.BoardHashtag;
import com.example.jooq.tables.BoardImage;
import com.example.jooq.tables.BucketItem;
import com.example.jooq.tables.Category;
import com.example.jooq.tables.Chat;
import com.example.jooq.tables.Comment;
import com.example.jooq.tables.Event;
import com.example.jooq.tables.Favor;
import com.example.jooq.tables.Follow;
import com.example.jooq.tables.Hashtag;
import com.example.jooq.tables.Image;
import com.example.jooq.tables.Likes;
import com.example.jooq.tables.NotificationContent;
import com.example.jooq.tables.NotificationInfo;
import com.example.jooq.tables.NotificationSetting;
import com.example.jooq.tables.Party;
import com.example.jooq.tables.PartyInvitation;
import com.example.jooq.tables.PartyMatchCond;
import com.example.jooq.tables.PartyMatchInfo;
import com.example.jooq.tables.PkCriteria;
import com.example.jooq.tables.PkLog;
import com.example.jooq.tables.PkTerm;
import com.example.jooq.tables.PkTermRank;
import com.example.jooq.tables.Review;
import com.example.jooq.tables.Store;
import com.example.jooq.tables.StoreBucket;
import com.example.jooq.tables.UserFavor;
import com.example.jooq.tables.UserMatchCond;
import com.example.jooq.tables.UserMatchCondCategory;
import com.example.jooq.tables.UserMatchCondStore;
import com.example.jooq.tables.UserMatchInfo;
import com.example.jooq.tables.UserMatchInfoCategory;
import com.example.jooq.tables.UserMatchInfoStore;
import com.example.jooq.tables.Users;
import com.example.jooq.tables.records.BoardEventRecord;
import com.example.jooq.tables.records.BoardHashtagRecord;
import com.example.jooq.tables.records.BoardImageRecord;
import com.example.jooq.tables.records.BoardRecord;
import com.example.jooq.tables.records.BucketItemRecord;
import com.example.jooq.tables.records.CategoryRecord;
import com.example.jooq.tables.records.ChatRecord;
import com.example.jooq.tables.records.CommentRecord;
import com.example.jooq.tables.records.EventRecord;
import com.example.jooq.tables.records.FavorRecord;
import com.example.jooq.tables.records.FollowRecord;
import com.example.jooq.tables.records.HashtagRecord;
import com.example.jooq.tables.records.ImageRecord;
import com.example.jooq.tables.records.LikesRecord;
import com.example.jooq.tables.records.NotificationContentRecord;
import com.example.jooq.tables.records.NotificationInfoRecord;
import com.example.jooq.tables.records.NotificationSettingRecord;
import com.example.jooq.tables.records.PartyInvitationRecord;
import com.example.jooq.tables.records.PartyMatchCondRecord;
import com.example.jooq.tables.records.PartyMatchInfoRecord;
import com.example.jooq.tables.records.PartyRecord;
import com.example.jooq.tables.records.PkCriteriaRecord;
import com.example.jooq.tables.records.PkLogRecord;
import com.example.jooq.tables.records.PkTermRankRecord;
import com.example.jooq.tables.records.PkTermRecord;
import com.example.jooq.tables.records.ReviewRecord;
import com.example.jooq.tables.records.StoreBucketRecord;
import com.example.jooq.tables.records.StoreRecord;
import com.example.jooq.tables.records.UserFavorRecord;
import com.example.jooq.tables.records.UserMatchCondCategoryRecord;
import com.example.jooq.tables.records.UserMatchCondRecord;
import com.example.jooq.tables.records.UserMatchCondStoreRecord;
import com.example.jooq.tables.records.UserMatchInfoCategoryRecord;
import com.example.jooq.tables.records.UserMatchInfoRecord;
import com.example.jooq.tables.records.UserMatchInfoStoreRecord;
import com.example.jooq.tables.records.UsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * taste.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BoardRecord> KEY_BOARD_PRIMARY = Internal.createUniqueKey(Board.BOARD, DSL.name("KEY_board_PRIMARY"), new TableField[] { Board.BOARD.ID }, true);
    public static final UniqueKey<BoardEventRecord> KEY_BOARD_EVENT_PRIMARY = Internal.createUniqueKey(BoardEvent.BOARD_EVENT, DSL.name("KEY_board_event_PRIMARY"), new TableField[] { BoardEvent.BOARD_EVENT.ID }, true);
    public static final UniqueKey<BoardHashtagRecord> KEY_BOARD_HASHTAG_PRIMARY = Internal.createUniqueKey(BoardHashtag.BOARD_HASHTAG, DSL.name("KEY_board_hashtag_PRIMARY"), new TableField[] { BoardHashtag.BOARD_HASHTAG.ID }, true);
    public static final UniqueKey<BoardImageRecord> KEY_BOARD_IMAGE_PRIMARY = Internal.createUniqueKey(BoardImage.BOARD_IMAGE, DSL.name("KEY_board_image_PRIMARY"), new TableField[] { BoardImage.BOARD_IMAGE.ID }, true);
    public static final UniqueKey<BucketItemRecord> KEY_BUCKET_ITEM_PRIMARY = Internal.createUniqueKey(BucketItem.BUCKET_ITEM, DSL.name("KEY_bucket_item_PRIMARY"), new TableField[] { BucketItem.BUCKET_ITEM.ID }, true);
    public static final UniqueKey<CategoryRecord> KEY_CATEGORY_PRIMARY = Internal.createUniqueKey(Category.CATEGORY, DSL.name("KEY_category_PRIMARY"), new TableField[] { Category.CATEGORY.ID }, true);
    public static final UniqueKey<CategoryRecord> KEY_CATEGORY_UK46CCWNSI9409T36LURVTYLJAK = Internal.createUniqueKey(Category.CATEGORY, DSL.name("KEY_category_UK46ccwnsi9409t36lurvtyljak"), new TableField[] { Category.CATEGORY.NAME }, true);
    public static final UniqueKey<ChatRecord> KEY_CHAT_PRIMARY = Internal.createUniqueKey(Chat.CHAT, DSL.name("KEY_chat_PRIMARY"), new TableField[] { Chat.CHAT.ID }, true);
    public static final UniqueKey<CommentRecord> KEY_COMMENT_PRIMARY = Internal.createUniqueKey(Comment.COMMENT, DSL.name("KEY_comment_PRIMARY"), new TableField[] { Comment.COMMENT.ID }, true);
    public static final UniqueKey<EventRecord> KEY_EVENT_PRIMARY = Internal.createUniqueKey(Event.EVENT, DSL.name("KEY_event_PRIMARY"), new TableField[] { Event.EVENT.ID }, true);
    public static final UniqueKey<FavorRecord> KEY_FAVOR_PRIMARY = Internal.createUniqueKey(Favor.FAVOR, DSL.name("KEY_favor_PRIMARY"), new TableField[] { Favor.FAVOR.ID }, true);
    public static final UniqueKey<FavorRecord> KEY_FAVOR_UKT6R4X9U0EH1A9YG98PAEUNGKD = Internal.createUniqueKey(Favor.FAVOR, DSL.name("KEY_favor_UKt6r4x9u0eh1a9yg98paeungkd"), new TableField[] { Favor.FAVOR.NAME }, true);
    public static final UniqueKey<FollowRecord> KEY_FOLLOW_PRIMARY = Internal.createUniqueKey(Follow.FOLLOW, DSL.name("KEY_follow_PRIMARY"), new TableField[] { Follow.FOLLOW.ID }, true);
    public static final UniqueKey<HashtagRecord> KEY_HASHTAG_PRIMARY = Internal.createUniqueKey(Hashtag.HASHTAG, DSL.name("KEY_hashtag_PRIMARY"), new TableField[] { Hashtag.HASHTAG.ID }, true);
    public static final UniqueKey<HashtagRecord> KEY_HASHTAG_UKTNICOK67W95AJKOAU49JEG9FM = Internal.createUniqueKey(Hashtag.HASHTAG, DSL.name("KEY_hashtag_UKtnicok67w95ajkoau49jeg9fm"), new TableField[] { Hashtag.HASHTAG.NAME }, true);
    public static final UniqueKey<ImageRecord> KEY_IMAGE_PRIMARY = Internal.createUniqueKey(Image.IMAGE, DSL.name("KEY_image_PRIMARY"), new TableField[] { Image.IMAGE.ID }, true);
    public static final UniqueKey<LikesRecord> KEY_LIKES_PRIMARY = Internal.createUniqueKey(Likes.LIKES, DSL.name("KEY_likes_PRIMARY"), new TableField[] { Likes.LIKES.ID }, true);
    public static final UniqueKey<NotificationContentRecord> KEY_NOTIFICATION_CONTENT_PRIMARY = Internal.createUniqueKey(NotificationContent.NOTIFICATION_CONTENT, DSL.name("KEY_notification_content_PRIMARY"), new TableField[] { NotificationContent.NOTIFICATION_CONTENT.ID }, true);
    public static final UniqueKey<NotificationInfoRecord> KEY_NOTIFICATION_INFO_PRIMARY = Internal.createUniqueKey(NotificationInfo.NOTIFICATION_INFO, DSL.name("KEY_notification_info_PRIMARY"), new TableField[] { NotificationInfo.NOTIFICATION_INFO.ID }, true);
    public static final UniqueKey<NotificationSettingRecord> KEY_NOTIFICATION_SETTING_PRIMARY = Internal.createUniqueKey(NotificationSetting.NOTIFICATION_SETTING, DSL.name("KEY_notification_setting_PRIMARY"), new TableField[] { NotificationSetting.NOTIFICATION_SETTING.CATEGORY, NotificationSetting.NOTIFICATION_SETTING.USER_ID }, true);
    public static final UniqueKey<PartyRecord> KEY_PARTY_PRIMARY = Internal.createUniqueKey(Party.PARTY, DSL.name("KEY_party_PRIMARY"), new TableField[] { Party.PARTY.ID }, true);
    public static final UniqueKey<PartyInvitationRecord> KEY_PARTY_INVITATION_PRIMARY = Internal.createUniqueKey(PartyInvitation.PARTY_INVITATION, DSL.name("KEY_party_invitation_PRIMARY"), new TableField[] { PartyInvitation.PARTY_INVITATION.ID }, true);
    public static final UniqueKey<PartyMatchCondRecord> KEY_PARTY_MATCH_COND_PRIMARY = Internal.createUniqueKey(PartyMatchCond.PARTY_MATCH_COND, DSL.name("KEY_party_match_cond_PRIMARY"), new TableField[] { PartyMatchCond.PARTY_MATCH_COND.ID }, true);
    public static final UniqueKey<PartyMatchCondRecord> KEY_PARTY_MATCH_COND_UK4XB1E30M93966J3SUDTB89MQL = Internal.createUniqueKey(PartyMatchCond.PARTY_MATCH_COND, DSL.name("KEY_party_match_cond_UK4xb1e30m93966j3sudtb89mql"), new TableField[] { PartyMatchCond.PARTY_MATCH_COND.PARTY_ID }, true);
    public static final UniqueKey<PartyMatchInfoRecord> KEY_PARTY_MATCH_INFO_PRIMARY = Internal.createUniqueKey(PartyMatchInfo.PARTY_MATCH_INFO, DSL.name("KEY_party_match_info_PRIMARY"), new TableField[] { PartyMatchInfo.PARTY_MATCH_INFO.ID }, true);
    public static final UniqueKey<PartyMatchInfoRecord> KEY_PARTY_MATCH_INFO_UKH85XYBWRODP21ATETKFCFAGRB = Internal.createUniqueKey(PartyMatchInfo.PARTY_MATCH_INFO, DSL.name("KEY_party_match_info_UKh85xybwrodp21atetkfcfagrb"), new TableField[] { PartyMatchInfo.PARTY_MATCH_INFO.STORE_ID }, true);
    public static final UniqueKey<PartyMatchInfoRecord> KEY_PARTY_MATCH_INFO_UKSCA0UF0GR8UE2UH12RNJE65BP = Internal.createUniqueKey(PartyMatchInfo.PARTY_MATCH_INFO, DSL.name("KEY_party_match_info_UKsca0uf0gr8ue2uh12rnje65bp"), new TableField[] { PartyMatchInfo.PARTY_MATCH_INFO.PARTY_ID }, true);
    public static final UniqueKey<PkCriteriaRecord> KEY_PK_CRITERIA_PRIMARY = Internal.createUniqueKey(PkCriteria.PK_CRITERIA, DSL.name("KEY_pk_criteria_PRIMARY"), new TableField[] { PkCriteria.PK_CRITERIA.ID }, true);
    public static final UniqueKey<PkLogRecord> KEY_PK_LOG_PRIMARY = Internal.createUniqueKey(PkLog.PK_LOG, DSL.name("KEY_pk_log_PRIMARY"), new TableField[] { PkLog.PK_LOG.ID }, true);
    public static final UniqueKey<PkTermRecord> KEY_PK_TERM_PRIMARY = Internal.createUniqueKey(PkTerm.PK_TERM, DSL.name("KEY_pk_term_PRIMARY"), new TableField[] { PkTerm.PK_TERM.ID }, true);
    public static final UniqueKey<PkTermRankRecord> KEY_PK_TERM_RANK_PRIMARY = Internal.createUniqueKey(PkTermRank.PK_TERM_RANK, DSL.name("KEY_pk_term_rank_PRIMARY"), new TableField[] { PkTermRank.PK_TERM_RANK.ID }, true);
    public static final UniqueKey<ReviewRecord> KEY_REVIEW_PRIMARY = Internal.createUniqueKey(Review.REVIEW, DSL.name("KEY_review_PRIMARY"), new TableField[] { Review.REVIEW.ID }, true);
    public static final UniqueKey<ReviewRecord> KEY_REVIEW_UKC6CGB1AWBHKDHSVGYKDX8IKQ3 = Internal.createUniqueKey(Review.REVIEW, DSL.name("KEY_review_UKc6cgb1awbhkdhsvgykdx8ikq3"), new TableField[] { Review.REVIEW.IMAGE_ID }, true);
    public static final UniqueKey<StoreRecord> KEY_STORE_PRIMARY = Internal.createUniqueKey(Store.STORE, DSL.name("KEY_store_PRIMARY"), new TableField[] { Store.STORE.ID }, true);
    public static final UniqueKey<StoreRecord> KEY_STORE_UKF5MDBNVT3IC06CPQK2FNOTMIS = Internal.createUniqueKey(Store.STORE, DSL.name("KEY_store_UKf5mdbnvt3ic06cpqk2fnotmis"), new TableField[] { Store.STORE.NAME, Store.STORE.MAPX, Store.STORE.MAPY }, true);
    public static final UniqueKey<StoreBucketRecord> KEY_STORE_BUCKET_PRIMARY = Internal.createUniqueKey(StoreBucket.STORE_BUCKET, DSL.name("KEY_store_bucket_PRIMARY"), new TableField[] { StoreBucket.STORE_BUCKET.ID }, true);
    public static final UniqueKey<UserFavorRecord> KEY_USER_FAVOR_PRIMARY = Internal.createUniqueKey(UserFavor.USER_FAVOR, DSL.name("KEY_user_favor_PRIMARY"), new TableField[] { UserFavor.USER_FAVOR.ID }, true);
    public static final UniqueKey<UserMatchCondRecord> KEY_USER_MATCH_COND_PRIMARY = Internal.createUniqueKey(UserMatchCond.USER_MATCH_COND, DSL.name("KEY_user_match_cond_PRIMARY"), new TableField[] { UserMatchCond.USER_MATCH_COND.ID }, true);
    public static final UniqueKey<UserMatchCondCategoryRecord> KEY_USER_MATCH_COND_CATEGORY_PRIMARY = Internal.createUniqueKey(UserMatchCondCategory.USER_MATCH_COND_CATEGORY, DSL.name("KEY_user_match_cond_category_PRIMARY"), new TableField[] { UserMatchCondCategory.USER_MATCH_COND_CATEGORY.ID }, true);
    public static final UniqueKey<UserMatchCondStoreRecord> KEY_USER_MATCH_COND_STORE_PRIMARY = Internal.createUniqueKey(UserMatchCondStore.USER_MATCH_COND_STORE, DSL.name("KEY_user_match_cond_store_PRIMARY"), new TableField[] { UserMatchCondStore.USER_MATCH_COND_STORE.ID }, true);
    public static final UniqueKey<UserMatchInfoRecord> KEY_USER_MATCH_INFO_PRIMARY = Internal.createUniqueKey(UserMatchInfo.USER_MATCH_INFO, DSL.name("KEY_user_match_info_PRIMARY"), new TableField[] { UserMatchInfo.USER_MATCH_INFO.ID }, true);
    public static final UniqueKey<UserMatchInfoCategoryRecord> KEY_USER_MATCH_INFO_CATEGORY_PRIMARY = Internal.createUniqueKey(UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY, DSL.name("KEY_user_match_info_category_PRIMARY"), new TableField[] { UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY.ID }, true);
    public static final UniqueKey<UserMatchInfoStoreRecord> KEY_USER_MATCH_INFO_STORE_PRIMARY = Internal.createUniqueKey(UserMatchInfoStore.USER_MATCH_INFO_STORE, DSL.name("KEY_user_match_info_store_PRIMARY"), new TableField[] { UserMatchInfoStore.USER_MATCH_INFO_STORE.ID }, true);
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = Internal.createUniqueKey(Users.USERS, DSL.name("KEY_users_PRIMARY"), new TableField[] { Users.USERS.ID }, true);
    public static final UniqueKey<UsersRecord> KEY_USERS_UK6DOTKOTT2KJSP8VW4D0M25FB7 = Internal.createUniqueKey(Users.USERS, DSL.name("KEY_users_UK6dotkott2kjsp8vw4d0m25fb7"), new TableField[] { Users.USERS.EMAIL }, true);
    public static final UniqueKey<UsersRecord> KEY_USERS_UK94DJ9RY3K3TMCSYG8EATP7VVN = Internal.createUniqueKey(Users.USERS, DSL.name("KEY_users_UK94dj9ry3k3tmcsyg8eatp7vvn"), new TableField[] { Users.USERS.IMAGE_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BoardRecord, UsersRecord> FK5VLH90QYII65IXWSBNAFD55UD = Internal.createForeignKey(Board.BOARD, DSL.name("FK5vlh90qyii65ixwsbnafd55ud"), new TableField[] { Board.BOARD.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<BoardRecord, StoreRecord> FKQRCX4SHWCQ3XLX22I147O9DPS = Internal.createForeignKey(Board.BOARD, DSL.name("FKqrcx4shwcq3xlx22i147o9dps"), new TableField[] { Board.BOARD.STORE_ID }, Keys.KEY_STORE_PRIMARY, new TableField[] { Store.STORE.ID }, true);
    public static final ForeignKey<BoardEventRecord, BoardRecord> FKA842V972CV5LF63BC7T0H6NWK = Internal.createForeignKey(BoardEvent.BOARD_EVENT, DSL.name("FKa842v972cv5lf63bc7t0h6nwk"), new TableField[] { BoardEvent.BOARD_EVENT.BOARD_ID }, Keys.KEY_BOARD_PRIMARY, new TableField[] { Board.BOARD.ID }, true);
    public static final ForeignKey<BoardEventRecord, EventRecord> FKOIX9HAITANMBF65EG5FO6GKF8 = Internal.createForeignKey(BoardEvent.BOARD_EVENT, DSL.name("FKoix9haitanmbf65eg5fo6gkf8"), new TableField[] { BoardEvent.BOARD_EVENT.EVENT_ID }, Keys.KEY_EVENT_PRIMARY, new TableField[] { Event.EVENT.ID }, true);
    public static final ForeignKey<BoardHashtagRecord, HashtagRecord> FK2F8XM9SDI3I2M5R2GBO0968T0 = Internal.createForeignKey(BoardHashtag.BOARD_HASHTAG, DSL.name("FK2f8xm9sdi3i2m5r2gbo0968t0"), new TableField[] { BoardHashtag.BOARD_HASHTAG.HASHTAG_ID }, Keys.KEY_HASHTAG_PRIMARY, new TableField[] { Hashtag.HASHTAG.ID }, true);
    public static final ForeignKey<BoardHashtagRecord, BoardRecord> FKGNJ9SG4E3RU7TA9SA7FSS2NLV = Internal.createForeignKey(BoardHashtag.BOARD_HASHTAG, DSL.name("FKgnj9sg4e3ru7ta9sa7fss2nlv"), new TableField[] { BoardHashtag.BOARD_HASHTAG.BOARD_ID }, Keys.KEY_BOARD_PRIMARY, new TableField[] { Board.BOARD.ID }, true);
    public static final ForeignKey<BoardImageRecord, ImageRecord> FK27RFQPC9PF352XV9FHR4VKLCI = Internal.createForeignKey(BoardImage.BOARD_IMAGE, DSL.name("FK27rfqpc9pf352xv9fhr4vklci"), new TableField[] { BoardImage.BOARD_IMAGE.IMAGE_ID }, Keys.KEY_IMAGE_PRIMARY, new TableField[] { Image.IMAGE.ID }, true);
    public static final ForeignKey<BoardImageRecord, BoardRecord> FKP567MLNWW479XGIRMD98KCQNP = Internal.createForeignKey(BoardImage.BOARD_IMAGE, DSL.name("FKp567mlnww479xgirmd98kcqnp"), new TableField[] { BoardImage.BOARD_IMAGE.BOARD_ID }, Keys.KEY_BOARD_PRIMARY, new TableField[] { Board.BOARD.ID }, true);
    public static final ForeignKey<BucketItemRecord, StoreBucketRecord> FK7V0L122K2JV00SJ7YC3CVE69D = Internal.createForeignKey(BucketItem.BUCKET_ITEM, DSL.name("FK7v0l122k2jv00sj7yc3cve69d"), new TableField[] { BucketItem.BUCKET_ITEM.BUCKET_ID }, Keys.KEY_STORE_BUCKET_PRIMARY, new TableField[] { StoreBucket.STORE_BUCKET.ID }, true);
    public static final ForeignKey<BucketItemRecord, StoreRecord> FKPJ3NSIWNBEL3DOUQT357P5J5J = Internal.createForeignKey(BucketItem.BUCKET_ITEM, DSL.name("FKpj3nsiwnbel3douqt357p5j5j"), new TableField[] { BucketItem.BUCKET_ITEM.STORE_ID }, Keys.KEY_STORE_PRIMARY, new TableField[] { Store.STORE.ID }, true);
    public static final ForeignKey<ChatRecord, UsersRecord> FK1X766U663L7M0MXUJ0O72MUU = Internal.createForeignKey(Chat.CHAT, DSL.name("FK1x766u663l7m0mxuj0o72muu"), new TableField[] { Chat.CHAT.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<ChatRecord, PartyRecord> FKAN05U3WEEWKNA57ITEOYKMQE2 = Internal.createForeignKey(Chat.CHAT, DSL.name("FKan05u3weewkna57iteoykmqe2"), new TableField[] { Chat.CHAT.PARTY_ID }, Keys.KEY_PARTY_PRIMARY, new TableField[] { Party.PARTY.ID }, true);
    public static final ForeignKey<CommentRecord, CommentRecord> FK1O5NI2RC96HM68W7UIUXATN12 = Internal.createForeignKey(Comment.COMMENT, DSL.name("FK1o5ni2rc96hm68w7uiuxatn12"), new TableField[] { Comment.COMMENT.ROOT_COMMENT }, Keys.KEY_COMMENT_PRIMARY, new TableField[] { Comment.COMMENT.ID }, true);
    public static final ForeignKey<CommentRecord, CommentRecord> FKK5DGRGAXQ2CNQQO788R2GYSXO = Internal.createForeignKey(Comment.COMMENT, DSL.name("FKk5dgrgaxq2cnqqo788r2gysxo"), new TableField[] { Comment.COMMENT.PARENT_COMMENT }, Keys.KEY_COMMENT_PRIMARY, new TableField[] { Comment.COMMENT.ID }, true);
    public static final ForeignKey<CommentRecord, BoardRecord> FKLIJ9OOR1NAV89JEAT35S6KBP1 = Internal.createForeignKey(Comment.COMMENT, DSL.name("FKlij9oor1nav89jeat35s6kbp1"), new TableField[] { Comment.COMMENT.BOARD_ID }, Keys.KEY_BOARD_PRIMARY, new TableField[] { Board.BOARD.ID }, true);
    public static final ForeignKey<CommentRecord, UsersRecord> FKQM52P1V3O13HY268HE0WCNGR5 = Internal.createForeignKey(Comment.COMMENT, DSL.name("FKqm52p1v3o13hy268he0wcngr5"), new TableField[] { Comment.COMMENT.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<EventRecord, UsersRecord> FK31RXEXKQQBEYMNPW4D3BF9VSY = Internal.createForeignKey(Event.EVENT, DSL.name("FK31rxexkqqbeymnpw4d3bf9vsy"), new TableField[] { Event.EVENT.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<FollowRecord, UsersRecord> FK9OQSJOVU9BL95DWT8IBIY2OEY = Internal.createForeignKey(Follow.FOLLOW, DSL.name("FK9oqsjovu9bl95dwt8ibiy2oey"), new TableField[] { Follow.FOLLOW.FOLLOWING_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<FollowRecord, UsersRecord> FKJIKG34TXCXNHCKY26W14FVFCC = Internal.createForeignKey(Follow.FOLLOW, DSL.name("FKjikg34txcxnhcky26w14fvfcc"), new TableField[] { Follow.FOLLOW.FOLLOWER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<LikesRecord, BoardRecord> FK5CQ36196J3WW17D7R95QDM4TD = Internal.createForeignKey(Likes.LIKES, DSL.name("FK5cq36196j3ww17d7r95qdm4td"), new TableField[] { Likes.LIKES.BOARD_ID }, Keys.KEY_BOARD_PRIMARY, new TableField[] { Board.BOARD.ID }, true);
    public static final ForeignKey<LikesRecord, UsersRecord> FKNVX9SEEQQYY71BIJ291PWIWRG = Internal.createForeignKey(Likes.LIKES, DSL.name("FKnvx9seeqqyy71bij291pwiwrg"), new TableField[] { Likes.LIKES.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<NotificationInfoRecord, UsersRecord> FKFV5V471G6R1LAK3GU0SMNJKHI = Internal.createForeignKey(NotificationInfo.NOTIFICATION_INFO, DSL.name("FKfv5v471g6r1lak3gu0smnjkhi"), new TableField[] { NotificationInfo.NOTIFICATION_INFO.NOTIFICATION_TARGET }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<NotificationInfoRecord, NotificationContentRecord> FKPB3KNRBEKAD3NAMOGSK229SOD = Internal.createForeignKey(NotificationInfo.NOTIFICATION_INFO, DSL.name("FKpb3knrbekad3namogsk229sod"), new TableField[] { NotificationInfo.NOTIFICATION_INFO.NOTIFICATION_CONTENT_ID }, Keys.KEY_NOTIFICATION_CONTENT_PRIMARY, new TableField[] { NotificationContent.NOTIFICATION_CONTENT.ID }, true);
    public static final ForeignKey<NotificationSettingRecord, UsersRecord> FKMK226JK5F6J26WG7MOSHWHDX8 = Internal.createForeignKey(NotificationSetting.NOTIFICATION_SETTING, DSL.name("FKmk226jk5f6j26wg7moshwhdx8"), new TableField[] { NotificationSetting.NOTIFICATION_SETTING.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<PartyRecord, StoreRecord> FKGTE0CH57RDJR9Y17L6DTNP6OA = Internal.createForeignKey(Party.PARTY, DSL.name("FKgte0ch57rdjr9y17l6dtnp6oa"), new TableField[] { Party.PARTY.STORE_ID }, Keys.KEY_STORE_PRIMARY, new TableField[] { Store.STORE.ID }, true);
    public static final ForeignKey<PartyRecord, UsersRecord> FKOVYVFDS7DJ7UNWVQUF3687J3I = Internal.createForeignKey(Party.PARTY, DSL.name("FKovyvfds7dj7unwvquf3687j3i"), new TableField[] { Party.PARTY.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<PartyInvitationRecord, UserMatchInfoRecord> FKBK88CPB1XVKBNRQ18DCRE4J13 = Internal.createForeignKey(PartyInvitation.PARTY_INVITATION, DSL.name("FKbk88cpb1xvkbnrq18dcre4j13"), new TableField[] { PartyInvitation.PARTY_INVITATION.USER_MATCH_INFO_ID }, Keys.KEY_USER_MATCH_INFO_PRIMARY, new TableField[] { UserMatchInfo.USER_MATCH_INFO.ID }, true);
    public static final ForeignKey<PartyInvitationRecord, PartyRecord> FKC44BPDPO4LORFOB8NMD6NMJ4X = Internal.createForeignKey(PartyInvitation.PARTY_INVITATION, DSL.name("FKc44bpdpo4lorfob8nmd6nmj4x"), new TableField[] { PartyInvitation.PARTY_INVITATION.PARTY_ID }, Keys.KEY_PARTY_PRIMARY, new TableField[] { Party.PARTY.ID }, true);
    public static final ForeignKey<PartyInvitationRecord, UsersRecord> FKLXYCGRSOWLIE5JQ18C2NT5SD7 = Internal.createForeignKey(PartyInvitation.PARTY_INVITATION, DSL.name("FKlxycgrsowlie5jq18c2nt5sd7"), new TableField[] { PartyInvitation.PARTY_INVITATION.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<PartyMatchCondRecord, PartyRecord> FKB7BW6PPMJC1A85AKKW5NOUW7 = Internal.createForeignKey(PartyMatchCond.PARTY_MATCH_COND, DSL.name("FKb7bw6ppmjc1a85akkw5nouw7"), new TableField[] { PartyMatchCond.PARTY_MATCH_COND.PARTY_ID }, Keys.KEY_PARTY_PRIMARY, new TableField[] { Party.PARTY.ID }, true);
    public static final ForeignKey<PartyMatchInfoRecord, StoreRecord> FK1IMFYRPJ70NLOMD38O55B708D = Internal.createForeignKey(PartyMatchInfo.PARTY_MATCH_INFO, DSL.name("FK1imfyrpj70nlomd38o55b708d"), new TableField[] { PartyMatchInfo.PARTY_MATCH_INFO.STORE_ID }, Keys.KEY_STORE_PRIMARY, new TableField[] { Store.STORE.ID }, true);
    public static final ForeignKey<PartyMatchInfoRecord, PartyRecord> FKGLXRVCO5QKYFS2NK7Q1UYBQH6 = Internal.createForeignKey(PartyMatchInfo.PARTY_MATCH_INFO, DSL.name("FKglxrvco5qkyfs2nk7q1uybqh6"), new TableField[] { PartyMatchInfo.PARTY_MATCH_INFO.PARTY_ID }, Keys.KEY_PARTY_PRIMARY, new TableField[] { Party.PARTY.ID }, true);
    public static final ForeignKey<PkLogRecord, UsersRecord> FK6X6MVMYUDBCLSF97XPKWJQ2AW = Internal.createForeignKey(PkLog.PK_LOG, DSL.name("FK6x6mvmyudbclsf97xpkwjq2aw"), new TableField[] { PkLog.PK_LOG.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<PkTermRankRecord, PkTermRecord> FKJ52POEKT1R3E8I8REE6POU8MJ = Internal.createForeignKey(PkTermRank.PK_TERM_RANK, DSL.name("FKj52poekt1r3e8i8ree6pou8mj"), new TableField[] { PkTermRank.PK_TERM_RANK.PK_TERM_ID }, Keys.KEY_PK_TERM_PRIMARY, new TableField[] { PkTerm.PK_TERM.ID }, true);
    public static final ForeignKey<PkTermRankRecord, UsersRecord> FKL8NJ51UEPXKNS6I0C0A1DSKDA = Internal.createForeignKey(PkTermRank.PK_TERM_RANK, DSL.name("FKl8nj51uepxkns6i0c0a1dskda"), new TableField[] { PkTermRank.PK_TERM_RANK.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<ReviewRecord, ImageRecord> FK2BU91X77T5EA5NB14E39MQCQS = Internal.createForeignKey(Review.REVIEW, DSL.name("FK2bu91x77t5ea5nb14e39mqcqs"), new TableField[] { Review.REVIEW.IMAGE_ID }, Keys.KEY_IMAGE_PRIMARY, new TableField[] { Image.IMAGE.ID }, true);
    public static final ForeignKey<ReviewRecord, UsersRecord> FK6CPW2NLKLBLPVC7HYT7KO6V3E = Internal.createForeignKey(Review.REVIEW, DSL.name("FK6cpw2nlklblpvc7hyt7ko6v3e"), new TableField[] { Review.REVIEW.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<ReviewRecord, StoreRecord> FK74D12BA8SXXU9VPNC59B43Y30 = Internal.createForeignKey(Review.REVIEW, DSL.name("FK74d12ba8sxxu9vpnc59b43y30"), new TableField[] { Review.REVIEW.STORE_ID }, Keys.KEY_STORE_PRIMARY, new TableField[] { Store.STORE.ID }, true);
    public static final ForeignKey<StoreRecord, CategoryRecord> FKO36XK5H32W3ADFALRCM6PTIS = Internal.createForeignKey(Store.STORE, DSL.name("FKo36xk5h32w3adfalrcm6ptis"), new TableField[] { Store.STORE.CATEGORY_ID }, Keys.KEY_CATEGORY_PRIMARY, new TableField[] { Category.CATEGORY.ID }, true);
    public static final ForeignKey<StoreBucketRecord, UsersRecord> FKK3YHB1QMLMBSK3WRHFUNKSS8G = Internal.createForeignKey(StoreBucket.STORE_BUCKET, DSL.name("FKk3yhb1qmlmbsk3wrhfunkss8g"), new TableField[] { StoreBucket.STORE_BUCKET.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<UserFavorRecord, FavorRecord> FKFVISAU9PY077YJ8Y9FAETAKQY = Internal.createForeignKey(UserFavor.USER_FAVOR, DSL.name("FKfvisau9py077yj8y9faetakqy"), new TableField[] { UserFavor.USER_FAVOR.FAVOR_ID }, Keys.KEY_FAVOR_PRIMARY, new TableField[] { Favor.FAVOR.ID }, true);
    public static final ForeignKey<UserFavorRecord, UsersRecord> FKIBVFS2851D7LOMPXOLQBJ93LW = Internal.createForeignKey(UserFavor.USER_FAVOR, DSL.name("FKibvfs2851d7lompxolqbj93lw"), new TableField[] { UserFavor.USER_FAVOR.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<UserMatchCondRecord, UsersRecord> FKDVC9QKLD0TEGW5IN7Q3DL9CHX = Internal.createForeignKey(UserMatchCond.USER_MATCH_COND, DSL.name("FKdvc9qkld0tegw5in7q3dl9chx"), new TableField[] { UserMatchCond.USER_MATCH_COND.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<UserMatchCondCategoryRecord, CategoryRecord> FK11QMU2ON1XOMWWRUN60YIFYMT = Internal.createForeignKey(UserMatchCondCategory.USER_MATCH_COND_CATEGORY, DSL.name("FK11qmu2on1xomwwrun60yifymt"), new TableField[] { UserMatchCondCategory.USER_MATCH_COND_CATEGORY.CATEGORY_ID }, Keys.KEY_CATEGORY_PRIMARY, new TableField[] { Category.CATEGORY.ID }, true);
    public static final ForeignKey<UserMatchCondCategoryRecord, UserMatchCondRecord> FKN720E0SJ5S7GTQUW6L8QTKHJ = Internal.createForeignKey(UserMatchCondCategory.USER_MATCH_COND_CATEGORY, DSL.name("FKn720e0sj5s7gtquw6l8qtkhj"), new TableField[] { UserMatchCondCategory.USER_MATCH_COND_CATEGORY.USER_MATCH_COND_ID }, Keys.KEY_USER_MATCH_COND_PRIMARY, new TableField[] { UserMatchCond.USER_MATCH_COND.ID }, true);
    public static final ForeignKey<UserMatchCondStoreRecord, UserMatchCondRecord> FKA7O5BQPRXPEGM1YKUSNW5L21H = Internal.createForeignKey(UserMatchCondStore.USER_MATCH_COND_STORE, DSL.name("FKa7o5bqprxpegm1ykusnw5l21h"), new TableField[] { UserMatchCondStore.USER_MATCH_COND_STORE.USER_MATCH_COND_ID }, Keys.KEY_USER_MATCH_COND_PRIMARY, new TableField[] { UserMatchCond.USER_MATCH_COND.ID }, true);
    public static final ForeignKey<UserMatchCondStoreRecord, StoreRecord> FKQ1MECNN3CY0SHOSO13LUBHUX7 = Internal.createForeignKey(UserMatchCondStore.USER_MATCH_COND_STORE, DSL.name("FKq1mecnn3cy0shoso13lubhux7"), new TableField[] { UserMatchCondStore.USER_MATCH_COND_STORE.STORE_ID }, Keys.KEY_STORE_PRIMARY, new TableField[] { Store.STORE.ID }, true);
    public static final ForeignKey<UserMatchInfoRecord, UsersRecord> FK77RPQXPRVI3KDQGPRFWNPO85B = Internal.createForeignKey(UserMatchInfo.USER_MATCH_INFO, DSL.name("FK77rpqxprvi3kdqgprfwnpo85b"), new TableField[] { UserMatchInfo.USER_MATCH_INFO.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<UserMatchInfoCategoryRecord, UserMatchInfoRecord> FK7FWRCCH9DPD3TS8M3US4WP7J1 = Internal.createForeignKey(UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY, DSL.name("FK7fwrcch9dpd3ts8m3us4wp7j1"), new TableField[] { UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY.USER_MATCH_INFO_ID }, Keys.KEY_USER_MATCH_INFO_PRIMARY, new TableField[] { UserMatchInfo.USER_MATCH_INFO.ID }, true);
    public static final ForeignKey<UserMatchInfoCategoryRecord, CategoryRecord> FKTCLX38YL6R9QBUSQ5XL48220K = Internal.createForeignKey(UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY, DSL.name("FKtclx38yl6r9qbusq5xl48220k"), new TableField[] { UserMatchInfoCategory.USER_MATCH_INFO_CATEGORY.CATEGORY_ID }, Keys.KEY_CATEGORY_PRIMARY, new TableField[] { Category.CATEGORY.ID }, true);
    public static final ForeignKey<UserMatchInfoStoreRecord, UserMatchInfoRecord> FKEEN3N3APJQI73EI5OH9FY6QHY = Internal.createForeignKey(UserMatchInfoStore.USER_MATCH_INFO_STORE, DSL.name("FKeen3n3apjqi73ei5oh9fy6qhy"), new TableField[] { UserMatchInfoStore.USER_MATCH_INFO_STORE.USER_MATCH_INFO_ID }, Keys.KEY_USER_MATCH_INFO_PRIMARY, new TableField[] { UserMatchInfo.USER_MATCH_INFO.ID }, true);
    public static final ForeignKey<UserMatchInfoStoreRecord, StoreRecord> FKLX7X0HBA2KB801IJTKCV0JPW9 = Internal.createForeignKey(UserMatchInfoStore.USER_MATCH_INFO_STORE, DSL.name("FKlx7x0hba2kb801ijtkcv0jpw9"), new TableField[] { UserMatchInfoStore.USER_MATCH_INFO_STORE.STORE_ID }, Keys.KEY_STORE_PRIMARY, new TableField[] { Store.STORE.ID }, true);
    public static final ForeignKey<UsersRecord, ImageRecord> FKLQJ25C28SWU46S4JBUDD7HORE = Internal.createForeignKey(Users.USERS, DSL.name("FKlqj25c28swu46s4jbudd7hore"), new TableField[] { Users.USERS.IMAGE_ID }, Keys.KEY_IMAGE_PRIMARY, new TableField[] { Image.IMAGE.ID }, true);
}
