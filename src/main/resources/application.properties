spring.application.name=taste
#DataSource
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/${DB_NAME}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8
#Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.highlight_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=100
server.error.include-message=always
#redis
spring.cache.type=redis
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
#spring multipart-file
spring.servlet.multipart.maxFileSize=10MB
spring.servlet.multipart.maxRequestSize=100MB
spring.servlet.multipart.enabled=true
#aws-s3
cloud.aws.stack.auto=false
cloud.aws.S3.bucket=${S3_BUCKET}
cloud.aws.region.static=${S3_REGION}
cloud.aws.credentials.access-key=${S3_ACCESS_KEY}
cloud.aws.credentials.secret-key=${S3_SECRET_KEY}
#session
server.servlet.session.timeout=30m
#Ocr
ocr_key=${ocr_key}
# naver map API
naver.map.client-id=${NAVER_MAP_CLIENT_ID}
naver.map.client-secret=${NAVER_MAP_CLIENT_SECRET}
# naver Geocoding api url
naver.map.geocoding.base-url=https://maps.apigw.ntruss.com/map-geocode/v2/geocode
# naver reverse Geocoding api url
naver.map.reverse-geocoding.base-url=https://maps.apigw.ntruss.com/map-reversegeocode/v2/gc
# default server port
server.port=8080
# Naver DataLab api
naver.datalab.client-id=${NAVER_DATALAB_CLIENT_ID}
naver.datalab.client-secret=${NAVER_DATALAB_CLIENT_SECRET}
naver.datalab.base-url=https://openapi.naver.com/v1/search/local.json
