version: '3.8'

services:
  app:
    image: ${DOCKER_IMAGE}
    container_name: taste-app
    ports:
      - "8081:8080"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DEV_REDIS_HOST: ${DEV_REDIS_HOST}
      DEV_REDIS_PORT: ${DEV_REDIS_PORT}
      S3_BUCKET: ${S3_BUCKET}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_REGION: ${S3_REGION}
      OCR_KEY: ${OCR_KEY}
      NAVER_MAP_CLIENT_ID: ${NAVER_MAP_CLIENT_ID}
      NAVER_MAP_CLIENT_SECRET: ${NAVER_MAP_CLIENT_SECRET}
      NAVER_DATALAB_CLIENT_ID: ${NAVER_DATALAB_CLIENT_ID}
      NAVER_DATALAB_CLIENT_SECRET: ${NAVER_DATALAB_CLIENT_SECRET}
      VAPID_PUBLIC: ${VAPID_PUBLIC}
      VAPID_PRIVATE: ${VAPID_PRIVATE}
      KAKAO_REST_API_KEY: ${KAKAO_REST_API_KEY}
      CLOUD_FRONT_DOMAIN: ${CLOUD_FRONT_DOMAIN}
      OCR_HOST: ${OCR_HOST}
      OCR_PATH: ${OCR_PATH}
      RDS_PASSWORD: ${RDS_PASSWORD}
      RDS_HOST: ${RDS_HOST}
      RDS_PORT: ${RDS_PORT}
      WEATHER_API_KEY: ${WEATHER_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      OPENAI_EMBEDDING_API_KEY: ${OPENAI_EMBEDDING_API_KEY}
    depends_on:
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}

  nginx:
    image: nginx
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: certbot
    image: certbot/certbot:arm32v6-latest
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

