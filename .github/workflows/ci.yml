name: CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:
    name: Build JAR (dev profiles)
    runs-on: ubuntu-latest

    env:
      SPRING_PROFILES_ACTIVE: dev
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      DEV_REDIS_HOST: ${{ secrets.DEV_REDIS_HOST }}
      DEV_REDIS_PORT: ${{ secrets.DEV_REDIS_PORT }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
      S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
      S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
      S3_REGION: ${{ secrets.S3_REGION }}
      OCR_KEY: ${{ secrets.OCR_KEY }}
      NAVER_MAP_CLIENT_ID: ${{ secrets.NAVER_MAP_CLIENT_ID }}
      NAVER_MAP_CLIENT_SECRET: ${{ secrets.NAVER_MAP_CLIENT_SECRET }}
      NAVER_DATALAB_CLIENT_ID: ${{ secrets.NAVER_DATALAB_CLIENT_ID }}
      NAVER_DATALAB_CLIENT_SECRET: ${{ secrets.NAVER_DATALAB_CLIENT_SECRET }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Build JAR
        run: ./gradlew bootJar


  test:
    name: Run Integration Tests (test-int profile)
    runs-on: ubuntu-latest

    env:
      SPRING_PROFILES_ACTIVE: test-int
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Create .env.test.test file for Docker Compose
        run: |
          echo "MYSQL_DATABASE=${MYSQL_DATABASE}" > .env.test
          echo "MYSQL_USER=${MYSQL_USER}" >> .env.test
          echo "MYSQL_PASSWORD=${MYSQL_PASSWORD}" >> .env.test
          echo "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}" >> .env.test

      - name: Docker Compose Down (Clean DB)
        run: docker-compose -f docker-compose.test.yml down -v

      - name: Docker Compose Up (Test DB & Redis)
        run: docker-compose -f docker-compose.test.yml up -d

      - name: Wait for MySQL and Redis to be healthy
        run: |
          echo "Waiting for containers to be healthy..."
          sleep 20

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Run Integration Tests
        run: ./gradlew test -Dspring.profiles.active=test-int
        env:
          SPRING_PROFILES_ACTIVE: test-int
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
